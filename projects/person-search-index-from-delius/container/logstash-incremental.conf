input {
    sqs {
        id => "poll-for-changes"
        queue => "${AWS_SQS_QUEUE_NAME}"
        region => "eu-west-2"
    }
#     # Useful for testing:
#     generator {
#         lines => [
#             '{"Message":"{\"offenderId\":2500000503,\"crn\":\"D001024\"}","MessageAttributes":{"eventType":{"Type":"String","Value":"OFFENDER_CHANGED"}}}',
#             '{"Message":"{\"offenderId\":2500000506,\"crn\":\"D001027\"}","MessageAttributes":{"eventType":{"Type":"String","Value":"OFFENDER_CHANGED"}}}'
#         ]
#         count => 1 # remove this to send messages repeatedly
#     }
}

filter {
    json {
        id => "parse-nested-json"
        source => "Message"
    }
    jdbc_streaming {
        id => "load-db-record"
        jdbc_driver_library => "/etc/logstash/ojdbc11.jar"
        jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
        jdbc_connection_string => "${JDBC_CONNECTION_STRING}"
        jdbc_user => "${JDBC_USER}"
        jdbc_password => "${JDBC_PASSWORD}"
        statement => "${INCREMENTAL_STATEMENT_SQL}"
        parameters => { "offender_id" => "%{offenderId}" }
        target => "db"
    }
    prune { whitelist_names => ["offenderId", "db"] }
    json {
        id => "parse-db-json"
        source => "[db][0][json]"
    }
    mutate { remove_field => ["db"] }
    if [db][0] {
        mutate { add_field => { "action" => "index" } }
    } else {
        mutate { add_field => { "action" => "delete" } }
    }
}

output {
    stdout { codec => rubydebug }
    opensearch {
        id => "index-into-primary"
        hosts => ["${SEARCH_INDEX_HOST}"]
        user => "${SEARCH_INDEX_USERNAME}"
        password => "${SEARCH_INDEX_PASSWORD}"
        index => "${PRIMARY_INDEX_NAME}"
        action => "%{action}"
        document_id => "%{offenderId}"
    }
    opensearch {
        id => "index-into-standby"
        hosts => ["${SEARCH_INDEX_HOST}"]
        user => "${SEARCH_INDEX_USERNAME}"
        password => "${SEARCH_INDEX_PASSWORD}"
        index => "${STANDBY_INDEX_NAME}"
        document_id => "%{offenderId}"
        action => "%{action}"
    }
}