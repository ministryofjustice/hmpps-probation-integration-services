input {
    sqs {
        id => "poll-for-changes"
        queue => "${CONTACT_SQS_QUEUE_NAME}"
        endpoint => "${SQS_ENDPOINT:https://sqs.eu-west-2.amazonaws.com}"
        region => "eu-west-2"
    }
}

filter {
    mutate { remove_field => [ "tags" ] } # Remove any previous errors during a DLQ redrive
    json {
        id => "parse-nested-json"
        source => "Message"
    }
    jdbc_streaming {
        id => "load-db-record"
        jdbc_driver_library => "/etc/logstash/ojdbc11.jar"
        jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
        jdbc_connection_string => "${JDBC_CONNECTION_STRING}"
        jdbc_user => "${JDBC_USER}"
        jdbc_password => "${JDBC_PASSWORD}"
        statement => "${INCREMENTAL_STATEMENT_SQL}"
        parameters => { "contact_id" => "%{sourceId}" }
        target => "db"
        tag_on_default_use => []
    }
    prune { whitelist_names => ["db", "tags", "Message"] }
    if [db][0][json] {
        json {
            id => "parse-db-json"
            source => "[db][0][json]"
        }
        mutate { add_field => { "[@metadata][action]" => "index" } }
    } else {
        mutate { add_field => { "[@metadata][action]" => "delete" } }
    }
    if ![tags] or ![tags][0] {
        mutate { remove_field => ["db", "Message", "MessageAttributes"] }
    }
}

output {
    unless [tags] and [tags][0] {
        opensearch {
            id => "index-into-primary"
            hosts => ["${SEARCH_INDEX_HOST}"]
            index => "${CONTACT_INDEX_PREFIX}-primary"
            document_id => "%{id}"
            action => "%{[@metadata][action]}"
            validate_after_inactivity => 0
        }
        opensearch {
            id => "index-into-standby"
            hosts => ["${SEARCH_INDEX_HOST}"]
            index => "${CONTACT_INDEX_PREFIX}-standby"
            document_id => "%{id}"
            action => "%{[@metadata][action]}"
            validate_after_inactivity => 0
        }
    }
}