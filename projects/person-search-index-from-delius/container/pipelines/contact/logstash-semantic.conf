input {
    sqs {
        id => "poll-for-changes"
        queue => "${CONTACT_SQS_QUEUE_NAME}"
        endpoint => "${SQS_ENDPOINT:https://sqs.eu-west-2.amazonaws.com}"
        region => "eu-west-2"
    }
}

filter {
    json {
        id => "parse-nested-json"
        source => "Message"
    }

    if [MessageAttributes][eventType][Value] == "CONTACT_DELETED" {
        mutate { add_field => { "[@metadata][action]" => "delete" } }
    } else {
        # Search to see if the CRN already exists in the semantic index
        http {
            id => "search-for-crn"
            url => "${SEARCH_INDEX_HOST}/contact-semantic-search-primary/_search"
            query => { routing => "%{crn}" }
            verb => "GET"
            body => '{
              "size": 0,
              "terminate_after": 1,
              "track_total_hits": false,
              "query": {
                "term": {
                  "crn": {
                    "value": "%{crn}"
                  }
                }
              }
            }'
            body_format => "json"
            target_body => "[@metadata][search_for_crn_response]"
        }
        mutate { add_field => { "[@metadata][crn_exists_in_semantic_index]" => "%{[@metadata][search_for_crn_response][terminated_early]}" } }
        mutate { convert => { "[@metadata][crn_exists_in_semantic_index]" => "boolean" } }

        jdbc_streaming {
            id => "load-db-record"
            jdbc_driver_library => "/etc/logstash/ojdbc11.jar"
            jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
            jdbc_connection_string => "${JDBC_CONNECTION_STRING}"
            jdbc_user => "${JDBC_USER}"
            jdbc_password => "${JDBC_PASSWORD}"
            jdbc_validate_connection => true
            jdbc_validation_timeout => 120
            sequel_opts => { max_connections => 100 }
            statement => "${INCREMENTAL_STATEMENT_SQL}"
            use_prepared_statements => true
            prepared_statement_name => "search_indexer_contact_incremental"
            prepared_statement_bind_values => ["%{sourceId}", "%{sourceId}", "%{sourceId}", "%{sourceId}"]
            target => "db"
            tag_on_default_use => []
            use_cache => false
        }
        prune { whitelist_names => ["@timestamp", "sourceId", "db", "tags", "Message", "MessageAttributes"] }
        if [db][0][json] {
            json {
                id => "parse-db-json"
                source => "[db][0][json]"
            }
            mutate { add_field => { "[@metadata][action]" => "index" } }
            mutate { remove_field => ["db", "Message", "MessageAttributes"] }
        } else {
           # adding a tag, to prevent record being added to opensearch
           mutate { add_tag => ["NO_RESULT"] }
        }
    }
}

output {
    # Do not index if there any issues (tags)
    if ![tags] or ![tags][0] {
        # Add to index if the event was a deletion, or a change for a case that is already populated
        if [@metadata][action] == "delete" or [@metadata][crn_exists_in_semantic_index] {
            opensearch {
                id => "index-into-semantic-search"
                hosts => ["${SEARCH_INDEX_HOST}"]
                index => "contact-semantic-search-primary"
                routing => "%{crn}"
                document_id => "%{sourceId}"
                action => "%{[@metadata][action]}"
                validate_after_inactivity => 0
            }
        }
    }
}