name: Deploy

on:
  workflow_dispatch:
    inputs:
      projects:
        description: Project
        type: choice
        required: true
        options:
          - '["approved-premises-and-oasys"]'
          - '["approved-premises-with-delius"]'
          - '["person-search-index-from-delius"]'
          - '["pre-sentence-reports-to-delius"]'
          - '["prison-case-notes-to-probation"]'
          - '["prison-custody-status-to-delius"]'
          - '["risk-assessment-scores-to-delius"]'
          - '["tier-to-delius"]'
          - '["workforce-allocations-to-delius"]'
          # ^ add new projects here
          # GitHub Actions doesn't support dynamic choices, we must add each project here to enable manual deployments
          # See https://github.com/community/community/discussions/11795
      environment:
        description: Environment
        type: choice
        required: true
        options:
          - test
          - preprod
          - prod
      version:
        description: Image version
        type: string
        required: true
        default: latest

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ${{ fromJson(inputs.projects) }}
    steps:
      - uses: actions/checkout@v3

      - name: Map GitHub environment to values file
        id: values
        shell: bash
        run: |
          if [ '${{ inputs.environment }}' == 'test' ];    then echo '::set-output name=filename::values-dev.yml'; fi
          if [ '${{ inputs.environment }}' == 'preprod' ]; then echo '::set-output name=filename::values-preprod.yml'; fi
          if [ '${{ inputs.environment }}' == 'prod' ];    then echo '::set-output name=filename::values-prod.yml'; fi

      - uses: ./.github/actions/cloud-platform-deploy
        with:
          project: ${{ matrix.project }}
          environment: ${{ inputs.environment }}
          version: ${{ inputs.version }}
          api: ${{ secrets.KUBE_ENV_API }}
          cert: ${{ secrets.KUBE_CERT }}
          cluster: ${{ secrets.KUBE_CLUSTER }}
          namespace: ${{ secrets.KUBE_NAMESPACE }}
          token: ${{ secrets.KUBE_TOKEN }}
          values-file: ${{ steps.values.outputs.filename }}
