name: Deploy

on:
  workflow_dispatch:
    inputs:
      projects:
        description: Project
        type: choice
        required: true
        options:
          - '["approved-premises-and-oasys"]'
          - '["approved-premises-with-delius"]'
          - '["person-search-index-from-delius"]'
          - '["pre-sentence-reports-to-delius"]'
          - '["prison-case-notes-to-probation"]'
          - '["prison-custody-status-to-delius"]'
          - '["risk-assessment-scores-to-delius"]'
          - '["tier-to-delius"]'
          - '["workforce-allocations-to-delius"]'
          # ^ add new projects here
          # GitHub Actions doesn't support dynamic choices, we must add each project here to enable manual deployments
          # See https://github.com/community/community/discussions/11795
      environment:
        description: Environment
        type: choice
        required: true
        options:
          - test
          - preprod
          - prod
      version:
        description: Image version
        type: string
        required: true
        default: latest

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ${{ fromJson(inputs.projects) }}
    environment:
      name: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v3
          
      - name: Authenticate to the cluster
        env:
          VERSION: ${{ inputs.version }}
        run: |
          echo "${{ secrets.KUBE_CERT }}" > ca.crt
          kubectl config set-cluster ${{ secrets.KUBE_CLUSTER }} --certificate-authority=./ca.crt --server=${{ secrets.KUBE_ENV_API }}
          kubectl config set-credentials cd-serviceaccount --token=${{ secrets.KUBE_TOKEN }}
          kubectl config set-context ${{ secrets.KUBE_CLUSTER }} --cluster=${{ secrets.KUBE_CLUSTER }} --user=cd-serviceaccount --namespace=${{ secrets.KUBE_NAMESPACE }}
          kubectl config use-context ${{ secrets.KUBE_CLUSTER }}

          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          brew install helm
          helm dependency update projects/${{ matrix.project }}/helm-deploy/${{ matrix.project }}
          helm upgrade --install ${{ matrix.project }} projects/${{ matrix.project }}/helm-deploy/${{ matrix.project }} --namespace=${{ secrets.KUBE_NAMESPACE_DEV }} --values projects/${{ matrix.project }}/helm-deploy/values-dev.yaml --set generic-service.image.tag=${VERSION} --version ${VERSION}