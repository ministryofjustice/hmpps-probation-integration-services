name: Deploy

on:
  workflow_call:
    inputs:
      projects:
        description: A JSON array of projects to deploy
        type: string
        required: true
      environment:
        description: The name of the environment to deploy to
        type: string
        required: true
      version:
        description: The image version to deploy
        type: string
        required: true

  workflow_dispatch:
    inputs:
      projects:
        description: Project
        type: choice
        required: true
        options:
          - '["approved-premises-and-oasys"]'
          - '["approved-premises-and-delius"]'
          - '["court-case-and-delius"]'
          - '["create-and-vary-a-licence-and-delius"]'
          - '["custody-key-dates-and-delius"]'
          - '["effective-proposal-framework-and-delius"]'
          - '["make-recall-decisions-and-delius"]'
          - '["manage-pom-cases-and-delius"]'
          - '["offender-events-and-delius"]'
          - '["person-search-index-from-delius"]'
          - '["pre-sentence-reports-to-delius"]'
          - '["prison-case-notes-to-probation"]'
          - '["prison-custody-status-to-delius"]'
          - '["refer-and-monitor-and-delius"]'
          - '["risk-assessment-scores-to-delius"]'
          - '["sentence-plan-and-delius"]'
          - '["tier-to-delius"]'
          - '["unpaid-work-and-delius"]'
          - '["workforce-allocations-to-delius"]'
          # ^ add new projects here
          # GitHub Actions doesn't support dynamic choices, we must add each project here to enable manual deployments
          # See https://github.com/community/community/discussions/11795
      environment:
        description: Environment
        type: choice
        required: true
        options:
          - test
          - preprod
          - prod
      version:
        description: Image version
        type: string
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        project: ${{ fromJson(inputs.projects) }}
    concurrency: deploy-${{ matrix.project }}-${{ inputs.environment }}
    environment:
      name: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/get-env-details
        id: env
        with:
          environment: ${{ inputs.environment }}

      - name: Get enabled flag from values file
        id: enabled
        shell: bash
        run: echo "enabled=$(cat ${{ steps.env.outputs.values-file }} | yq '.enabled' | sed 's/^null$/true/')" >> $GITHUB_OUTPUT
        working-directory: projects/${{ matrix.project }}/deploy

      - name: Check Chart.yaml file exists
        id: check_files
        uses: andstor/file-existence-action@20b4d2e596410855db8f9ca21e96fbe18e12930b # v2
        with:
          files: projects/${{ matrix.project }}/deploy/Chart.yaml

      - name: Deploy to Cloud Platform
        if: ${{ steps.check_files.outputs.files_exists == 'true' && steps.enabled.outputs.enabled == 'true' }}
        uses: ./.github/actions/cloud-platform-deploy
        with:
          project: ${{ matrix.project }}
          environment: ${{ inputs.environment }}
          version: ${{ inputs.version }}
          api: ${{ secrets.KUBE_ENV_API }}
          cert: ${{ secrets.KUBE_CERT }}
          cluster: ${{ secrets.KUBE_CLUSTER }}
          namespace: ${{ secrets.KUBE_NAMESPACE }}
          token: ${{ secrets.KUBE_TOKEN }}

      - name: Create Sentry release
        if: steps.enabled.outputs.enabled == 'true'
        uses: getsentry/action-release@v1
        env:
          SENTRY_ORG: ministryofjustice
          SENTRY_PROJECT: ${{ matrix.project }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        with:
          environment: ${{ inputs.environment }}
