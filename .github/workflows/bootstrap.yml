name: Bootstrap
# Perform initial project setup to enable development of a new service

on:
  workflow_dispatch:
    inputs:
      issue_number:
        description: Issue number (e.g. PI-123)
        required: true
        type: string
      project_name:
        description: Project name
        required: true
        type: string
      project_template:
        description: Project template
        required: true
        type: choice
        default: message-listener-with-api-client
        options:
          - api-client-and-server
          - api-server
          - message-listener
          - message-listener-with-api-client
          - message-listener-with-api-client-and-server
          - 'No template - I want to create the project from scratch'
      create_database_credentials:
        description: Will the service access the Delius database?
        default: true
        required: true
        type: boolean
      create_sentry_project:
        description: Will the service use Sentry for capturing exceptions?
        default: true
        required: true
        type: boolean
      create_oauth_client:
        description: Will the service consume another HTTP API that requires HMPPS Auth client credentials?
        default: true
        required: true
        type: boolean
      create_ingress:
        description: Will the service provide a HTTP API?
        default: false
        required: true
        type: boolean
      create_queue:
        description: Will the service consume HMPPS domain event messages?
        default: true
        required: true
        type: boolean

jobs:
  auth-setup:
    runs-on: ubuntu-latest
    if: ${{ inputs.create_oauth_client }}
    steps:
      - uses: actions/checkout@v3
      - name: Create issue for manual steps
        run: |
          gh issue create \
            --title "${{ inputs.issue_number }} Request HMPPS Auth client for ${{ inputs.project_name }}" \
            --body '
          - [ ] Clone Jira ticket: [HAAR-928](https://dsdmoj.atlassian.net/browse/HAAR-928)
          - [ ] Raise in Slack: [#hmpps-auth-audit-registers](https://mojdt.slack.com/archives/C02S71KUBED)' \
            --label bootstrap
        env:
          GITHUB_TOKEN: ${{ github.token }}

  db-secrets-setup:
    runs-on: ubuntu-latest
    if: ${{ inputs.create_database_credentials }}
    steps:
      - uses: actions/checkout@v3

      # convert project name to environment variable (e.g. 'hello-world' -> 'HELLO_WORLD')
      - id: project_name
        run: |
          echo "with_underscores=$(echo '${{ inputs.project_name }}' | sed 's/-/_/g')" >> $GITHUB_OUTPUT
          echo "with_underscores_uppercase=$(echo '${{ inputs.project_name }}' | sed 's/-/_/g' | tr '[:lower:]' '[:upper:]')" >> $GITHUB_OUTPUT

      - name: Set database username
        run: gh secret set "$NAME" --body "$VALUE" --app actions
        env:
          NAME: ${{ steps.project_name.outputs.with_underscores_uppercase }}_DB_USERNAME
          VALUE: ${{ steps.project_name.outputs.with_underscores }}
          GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}

      - uses: ./.github/actions/random-secret
        with:
          environment: test
          name: ${{ steps.project_name.outputs.with_underscores_uppercase }}_DB_PASSWORD
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

      - uses: ./.github/actions/random-secret
        with:
          environment: preprod
          name: ${{ steps.project_name.outputs.with_underscores_uppercase }}_DB_PASSWORD
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

      - uses: ./.github/actions/random-secret
        with:
          environment: prod
          name: ${{ steps.project_name.outputs.with_underscores_uppercase }}_DB_PASSWORD
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

  project-setup:
    if: ${{ inputs.project_template != 'No template - I want to create the project from scratch' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

      - name: Render project template
        uses: ./.github/actions/render-project-template
        with:
          project_name: ${{ inputs.project_name }}
          project_template: ${{ inputs.project_template }}

      - name: Create pull request
        id: pr
        uses: ./.github/actions/create-signed-pull-request
        with:
          add-paths: |
            settings.gradle.kts
            .idea/runConfigurations/*
            .github/workflows/deploy.yml
            .github/workflows/end-to-end-tests.yml
            .github/workflows/suppress-trivy.yml
            projects/${{ inputs.project_name }}/*
          branch: bootstrap/${{ inputs.project_name }}
          commit-message: ${{ inputs.issue_number }} Create initial project for ${{ inputs.project_name }}
          private-key: ${{ secrets.BOT_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.BOT_GPG_PASSPHRASE }}
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

      - name: Create issue for manual steps
        run: |
          gh issue create \
            --title "${{ inputs.issue_number }} Complete project setup for ${{ inputs.project_name }}" \
            --body "- [ ] Merge pull request: ${{ steps.pr.outputs.pull-request-url }}" \
            --label bootstrap
        env:
          GITHUB_TOKEN: ${{ github.token }}

  delius-aws-setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

      - uses: actions/checkout@v3
        with:
          path: hmpps-delius-core-terraform
          repository: ministryofjustice/hmpps-delius-core-terraform

      - name: Render Terraform service template
        if: ${{ ! inputs.create_ingress }}
        run: sed 's/SERVICE_NAME/${{ inputs.project_name }}/g' templates/service.tf > 'hmpps-delius-core-terraform/application/probation-integration-services/${{ inputs.project_name }}.tf'

      - name: Render Terraform service with load-balancer template
        if: ${{ inputs.create_ingress }}
        run: sed 's/SERVICE_NAME/${{ inputs.project_name }}/g' templates/service-with-load-balancer.tf > 'hmpps-delius-core-terraform/application/probation-integration-services/${{ inputs.project_name }}.tf'

      - name: Create pull request
        id: pr
        uses: ./.github/actions/create-signed-pull-request
        with:
          path: hmpps-delius-core-terraform
          branch: probation-integration/create-${{ inputs.project_name }}
          commit-message: ${{ inputs.issue_number }} Create ECS service for ${{ inputs.project_name }}
          private-key: ${{ secrets.BOT_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.BOT_GPG_PASSPHRASE }}
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

      - name: Create issue for manual steps
        run: |
          gh issue create \
            --title "${{ inputs.issue_number }} Complete infrastructure setup for ${{ inputs.project_name }}" \
            --body "- [ ] Merge pull request: ${{ steps.pr.outputs.pull-request-url }}" \
            --label bootstrap
        env:
          GITHUB_TOKEN: ${{ github.token }}

  sentry-setup:
    runs-on: ubuntu-latest
    if: ${{ inputs.create_sentry_project }}
    steps:
      - uses: actions/checkout@v3

      # convert project name to environment variable (e.g. 'hello-world' -> 'HELLO_WORLD')
      - id: project_name
        run: echo "with_underscores=$(echo '${{ inputs.project_name }}' | tr '[:lower:]' '[:upper:]' | sed 's/-/_/g')" >> $GITHUB_OUTPUT

      - name: Create project
        id: project
        run: |
          response=$(curl https://sentry.io/api/0/teams/ministryofjustice/probation-integration/projects/ --fail \
            -H 'Authorization: Bearer ${{ secrets.SENTRY_AUTH_TOKEN }}' \
            -H 'Content-Type: application/json' \
            -d '{"name":"${{ inputs.project_name }}"}')
          echo "slug=$(echo $response | jq -r '.slug')" >> $GITHUB_OUTPUT

      - name: Set platform to Kotlin
        run: |
          curl -X PUT https://sentry.io/api/0/projects/ministryofjustice/${{ steps.project.outputs.slug }}/ --fail \
            -H 'Authorization: Bearer ${{ secrets.SENTRY_AUTH_TOKEN }}' \
            -H 'Content-Type: application/json' \
            -d '{"platform":"kotlin"}'

      - name: Get client key (DSN)
        id: client_key
        run: |
          response=$(curl https://sentry.io/api/0/projects/ministryofjustice/${{ steps.project.outputs.slug }}/keys/ --fail \
                  -H 'Authorization: Bearer ${{ secrets.SENTRY_AUTH_TOKEN }}')
          id=$(echo $response | jq -r '.[0].id')
          dsn=$(echo $response | jq -r '.[0].dsn.public')
          echo "::add-mask::$dsn"
          echo "dsn=$dsn" >> $GITHUB_OUTPUT
          echo "id=$id" >> $GITHUB_OUTPUT

      - name: Store DSN as GitHub secret
        run: gh secret set "$NAME" --body "$VALUE" --app actions
        env:
          NAME: ${{ steps.project_name.outputs.with_underscores }}_SENTRY_DSN
          VALUE: ${{ steps.client_key.outputs.dsn }}
          GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}

      - name: Create issue for manual steps
        # see https://github.com/getsentry/sentry/issues/18904
        # see https://github.com/getsentry/sentry/issues/36968
        run: |
          gh issue create \
            --title "${{ inputs.issue_number }} Complete Sentry setup for ${{ inputs.project_name }}" \
            --body '
          - [ ] Configure rate limiting to 10/minute: https://sentry.io/settings/ministryofjustice/projects/${{ steps.project.outputs.slug }}/keys/${{ steps.client_key.outputs.id }}
          - [ ] Create a Slack alert: https://sentry.io/organizations/ministryofjustice/alerts/new/issue/?createFromDuplicate=true&duplicateRuleId=11530702&project=prison-case-notes-to-probation
          
          > :memo: Note: the above link will duplicate an alert from `prison-case-notes-to-probation`.  Make sure to update the Project to `${{ inputs.project_name }}` in the drop-down.' \
            --label bootstrap
        env:
          GITHUB_TOKEN: ${{ github.token }}

  sqs-queue-setup:
    runs-on: ubuntu-latest
    if: ${{ inputs.create_queue }}
    steps:
      - id: project_name
        run: echo "with_underscores_uppercase=$(echo '${{ inputs.project_name }}' | sed 's/-/_/g' | tr '[:lower:]' '[:upper:]')" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

      - uses: actions/checkout@v3
        with:
          path: cloud-platform-environments-dev
          repository: ministryofjustice/cloud-platform-environments
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

      - uses: actions/checkout@v3
        with:
          path: cloud-platform-environments-preprod
          repository: ministryofjustice/cloud-platform-environments
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

      - uses: actions/checkout@v3
        with:
          path: cloud-platform-environments-prod
          repository: ministryofjustice/cloud-platform-environments
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

      - name: Render Terraform queue template
        run: |
          sed 's/SERVICE_NAME_UPPERCASE/${{ steps.project_name.outputs.with_underscores_uppercase }}/g;s/SERVICE_NAME/${{ inputs.project_name }}/g' templates/sqs.tf > 'cloud-platform-environments-dev/namespaces/live.cloud-platform.service.justice.gov.uk/hmpps-probation-integration-services-dev/resources/${{ inputs.project_name }}-queue.tf'
          sed 's/SERVICE_NAME_UPPERCASE/${{ steps.project_name.outputs.with_underscores_uppercase }}/g;s/SERVICE_NAME/${{ inputs.project_name }}/g' templates/sqs.tf > 'cloud-platform-environments-preprod/namespaces/live.cloud-platform.service.justice.gov.uk/hmpps-probation-integration-services-preprod/resources/${{ inputs.project_name }}-queue.tf'
          sed 's/SERVICE_NAME_UPPERCASE/${{ steps.project_name.outputs.with_underscores_uppercase }}/g;s/SERVICE_NAME/${{ inputs.project_name }}/g' templates/sqs.tf > 'cloud-platform-environments-prod/namespaces/live.cloud-platform.service.justice.gov.uk/hmpps-probation-integration-services-prod/resources/${{ inputs.project_name }}-queue.tf'

      - name: Update IAM access to queues
        run: |
          sed -i '/managed_sqs_queues = \[/a \    module.${{ inputs.project_name }}-queue.sqs_arn,\n    module.${{ inputs.project_name }}-dlq.sqs_arn,' 'cloud-platform-environments-dev/namespaces/live.cloud-platform.service.justice.gov.uk/hmpps-probation-integration-services-dev/resources/iam.tf'
          sed -i '/managed_sqs_queues = \[/a \    module.${{ inputs.project_name }}-queue.sqs_arn,\n    module.${{ inputs.project_name }}-dlq.sqs_arn,' 'cloud-platform-environments-preprod/namespaces/live.cloud-platform.service.justice.gov.uk/hmpps-probation-integration-services-preprod/resources/iam.tf'
          sed -i '/managed_sqs_queues = \[/a \    module.${{ inputs.project_name }}-queue.sqs_arn,\n    module.${{ inputs.project_name }}-dlq.sqs_arn,' 'cloud-platform-environments-prod/namespaces/live.cloud-platform.service.justice.gov.uk/hmpps-probation-integration-services-prod/resources/iam.tf'

      - name: Create dev pull request
        id: dev-pr
        uses: ./.github/actions/create-signed-pull-request
        with:
          path: cloud-platform-environments-dev
          add-paths: namespaces/live.cloud-platform.service.justice.gov.uk/hmpps-probation-integration-services-dev
          branch: ${{ inputs.issue_number }}-create-${{ inputs.project_name }}-queue-dev
          commit-message: ${{ inputs.issue_number }} Create SQS queues for ${{ inputs.project_name }} (dev)
          private-key: ${{ secrets.BOT_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.BOT_GPG_PASSPHRASE }}
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

      - name: Create preprod pull request
        id: preprod-pr
        uses: ./.github/actions/create-signed-pull-request
        with:
          path: cloud-platform-environments-preprod
          add-paths: namespaces/live.cloud-platform.service.justice.gov.uk/hmpps-probation-integration-services-preprod
          branch: ${{ inputs.issue_number }}-create-${{ inputs.project_name }}-queue-preprod
          commit-message: ${{ inputs.issue_number }} Create SQS queues for ${{ inputs.project_name }} (preprod)
          private-key: ${{ secrets.BOT_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.BOT_GPG_PASSPHRASE }}
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

      - name: Create prod pull request
        id: prod-pr
        uses: ./.github/actions/create-signed-pull-request
        with:
          path: cloud-platform-environments-prod
          add-paths: namespaces/live.cloud-platform.service.justice.gov.uk/hmpps-probation-integration-services-prod
          branch: ${{ inputs.issue_number }}-create-${{ inputs.project_name }}-queue-prod
          commit-message: ${{ inputs.issue_number }} Create SQS queues for ${{ inputs.project_name }} (prod)
          private-key: ${{ secrets.BOT_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.BOT_GPG_PASSPHRASE }}
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

      - name: Create issue for manual steps
        run: |
          gh issue create \
            --title '${{ inputs.issue_number }} Complete queue setup for ${{ inputs.project_name }}' \
            --body '
          - [ ] Enter the event types the service will consume into the filter_policy for dev: [Edit file](https://github.com/ministryofjustice/cloud-platform-environments/edit/${{ inputs.issue_number }}-create-${{ inputs.project_name }}-queue-dev/namespaces/live.cloud-platform.service.justice.gov.uk/hmpps-probation-integration-services-dev/resources/${{ inputs.project_name }}-queue.tf)
          - [ ] Enter the event types the service will consume into the filter_policy for preprod: [Edit file](https://github.com/ministryofjustice/cloud-platform-environments/edit/${{ inputs.issue_number }}-create-${{ inputs.project_name }}-queue-preprod/namespaces/live.cloud-platform.service.justice.gov.uk/hmpps-probation-integration-services-preprod/resources/${{ inputs.project_name }}-queue.tf)
          - [ ] Enter the event types the service will consume into the filter_policy for prod: [Edit file](https://github.com/ministryofjustice/cloud-platform-environments/edit/${{ inputs.issue_number }}-create-${{ inputs.project_name }}-queue-prod/namespaces/live.cloud-platform.service.justice.gov.uk/hmpps-probation-integration-services-prod/resources/${{ inputs.project_name }}-queue.tf)
          - [ ] Request approval in [#ask-cloud-platform](https://mojdt.slack.com/archives/C57UPMZLY)
          > Hi there, please could you review these 3 PRs:
          > ${{ steps.dev-pr.outputs.pull-request-url }}
          > ${{ steps.preprod-pr.outputs.pull-request-url }}
          > ${{ steps.prod-pr.outputs.pull-request-url }}
          - [ ] Merge the pull requests' \
            --label bootstrap
        env:
          GITHUB_TOKEN: ${{ github.token }}
