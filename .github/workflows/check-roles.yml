name: Check Roles

on:
  workflow_call:
    inputs:
      projects:
        description: A JSON array of projects to check roles
        type: string
        required: true
      environment:
        description: The name of the environment to check roles
        type: string
        required: true

  workflow_dispatch:
    inputs:
      projects:
        description: Project
        type: choice
        required: true
        options:
          - '["prison-case-notes-to-probation"]'
          - '["workforce-allocations-to-delius"]'
          - '["pre-sentence-reports-to-delius"]'
          # GitHub Actions doesn't support dynamic choices, we must add each project here to enable manual deployments
          # See https://github.com/community/community/discussions/11795
      environment:
        description: Environment
        type: choice
        required: true
        options:
          - test
          - preprod
          - prod

jobs:
  check-roles:
    runs-on: moj-cloud-platform
    strategy:
      matrix:
        project: ${{ fromJson(inputs.projects) }}
    environment:
      name: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v3

      - name: Map GitHub environment to values file
        id: values
        shell: bash
        run: |
          if [ '${{ inputs.environment }}' == 'test' ];    then echo '::set-output name=filename::values-dev.yml'; fi
          if [ '${{ inputs.environment }}' == 'preprod' ]; then echo '::set-output name=filename::values-preprod.yml'; fi
          if [ '${{ inputs.environment }}' == 'prod' ];    then echo '::set-output name=filename::values-prod.yml'; fi

      - name: Get Hmpps Auth vals
        id: hmpps-auth-values
        shell: bash
        run: |
          project_name=$(echo '${{ matrix.project }}' | tr '[:lower:]' '[:upper:]' | sed 's/-/_/g')
          echo "::set-output name=token_url::$(cat ${{ steps.values.outputs.filename }} | yq '.env.SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_HMPPS-AUTH_TOKEN-URI')
          echo "::set-output name=roles::$(cat values.yml | yq '.required-roles')
          echo "::set-output name=client_id_name::${project_name}_CLIENT_ID"
          echo "::set-output name=client_secret_name::${project_name}_CLIENT_SECRET"
        working-directory: projects/${{ matrix.project }}/deploy

      - name: Get Hmmps Auth Roles
        id: hmpps-auth-request
        env:
          CLIENT_ID_NAME: ${{ steps.hmpps-auth-values.outputs.client_id_name }}
          CLIENT_SECRET_NAME: ${{ steps.hmpps-auth-values.outputs.client_secret_name }}
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ steps.hmpps-auth-values.outputs.token_url }}?grant_type=client_credentials
          method: 'POST'
          username: ${{ secrets[env.CLIENT_ID_NAME] }}
          password: ${{ secrets[env.CLIENT_SECRET_NAME] }}
          customHeaders: '{"Accept": "application/json"}'

      - name: Check Roles in token
        run: |
          response=${{ steps.hmpps-auth-request.outputs.response }}
          actual_roles=$(jq -R 'fromjson | .access_token | split(".") | .[1] | @base64d | fromjson | .authorities' <<< "${response}")
          roles_array=(`echo $actual_roles | sed  's/[]["|(",)|]/\n/g'`)
          required_array=(`echo ${{ steps.hmpps-auth-values.outputs.roles }} | sed 's/- /\n/g'`)
          echo "Actual Roles: $roles_array"
          echo "Required Roles: $required_array"
          matched_roles=$(awk 'BEGIN{RS = FS} NR == FNR {roles_array[$1] = 1; next} $1 in roles_array' <(echo "${roles_array[*]}") <(echo "${required_array[*]}"))
          matched_array=(`echo $matched_roles | sed  's/,/\n/g'`)
          echo "Matched Roles: $matched_array"
          if [ "${#matched_array[@]}" -eq "${#required_array[@]}" ]; then; exit 0; else exit 1; fi
