name: Pipeline

on:
  push:
  workflow_dispatch:
    inputs:
      deploy-to-test:
        description: 'Deploy this branch to the test environment?'
        type: boolean
        default: true
        required: true
      run-tests:
        description: 'Run end-to-end tests?'
        type: boolean
        default: true
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      changed-projects: ${{ steps.check-changes.outputs.projects }}
    steps:
      - uses: actions/checkout@v3
      - id: check-changes
        uses: ./.github/actions/check-changes
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - uses: gradle/wrapper-validation-action@v1

      - name: Set version
        id: version
        run: |
          version=$(date '+%Y-%m-%d').${{ github.run_number }}.$(echo ${{ github.sha }} | cut -c1-7)
          echo version=$version
          echo "ORG_GRADLE_PROJECT_version=$version" >> $GITHUB_ENV
          echo "::set-output name=version::$version"

      - name: Build and test
        uses: gradle/gradle-build-action@v2
        with:
          arguments: check

      - name: Publish test report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: '**/build/test-results/**/TEST-*.xml'

      - uses: codecov/codecov-action@v2
        with:
          files: ${{ github.workspace }}/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml

      - name: Push image
        if: github.ref == 'refs/heads/main' || inputs.deploy-to-test
        uses: gradle/gradle-build-action@v2
        env:
          QUAYIO_USERNAME: ${{ secrets.QUAYIO_USERNAME }}
          QUAYIO_PASSWORD: ${{ secrets.QUAYIO_PASSWORD }}
        with:
          arguments: jib

  deploy-to-test:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || inputs.deploy-to-test
    strategy:
      matrix:
        project: ${{ fromJson(needs.build.outputs.changed-projects) }}
    environment:
      name: test
      url: https://ndelius.test.probation.service.justice.gov.uk/
    steps:
      - uses: actions/checkout@v3
#      - name: Deploy
#        uses: ./.github/actions/deploy
#        with:
#          version: ${{ needs.build.outputs.version }}
#          working-directory: projects/${{ matrix.project }}

