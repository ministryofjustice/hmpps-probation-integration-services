name: Analyse
description: Publish test results to GitHub Actions, and analyse source code and results using Sonar

inputs:
  sonar-token:
    description: Sonar token
    required: true
  gradle-encryption-key:
    description: Gradle encryption key
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: actions/download-artifact@v4
      with:
        pattern: test-results-*
        path: test-results

    - name: Unpack test results
      run: for dir in test-results/*; do cp -R "$dir"/* .; done
      shell: bash

    - name: Publish test reports
      uses: mikepenz/action-junit-report@b14027d33d3a745ccc4d6a12f649e83110b5a373 # v5
      if: always() && github.actor != 'dependabot[bot]'
      with:
        check_name: |-
          Unit test results
          Integration test results
        report_paths: |-
          **/build/test-results/test/TEST-*.xml
          **/build/test-results/integrationTest/TEST-*.xml

    - name: Set version
      id: version
      shell: bash
      run: |
        version=$(date '+%Y-%m-%d').${{ github.run_number }}.$(echo ${{ github.sha }} | cut -c1-7)
        echo "VERSION=$version" | tee -a "$GITHUB_ENV"
        echo "version=$version" | tee -a "$GITHUB_OUTPUT"

    - uses: ./.github/actions/setup-gradle
      with:
        cache-encryption-key: ${{ inputs.gradle-encryption-key }}
        cache-read-only: true

    - name: Sonar analysis
      if: github.actor != 'dependabot[bot]'
      run: ./gradlew sonar -Dsonar.projectVersion="$VERSION"
      shell: bash
      env:
        SONAR_TOKEN: ${{ inputs.sonar-token }}
