name: Cloud Platform Deploy
description: Deploy to Cloud Platform using Helm

inputs:
  project:
    description: The project to deploy
    required: true
  environment:
    description: The environment to deploy to (dev/preprod/prod)
    required: true
  version:
    description: The version of the service to deploy
    required: true
  values-file:
    description: The name of the values file
    required: true
  api:
    description: The KUBE_ENV_API
    required: true
  cert:
    description: The KUBE_CERT
    required: true
  cluster:
    description: The KUBE_CLUSTER
    required: true
  namespace:
    description: The KUBE_NAMESPACE
    required: true
  token:
    description: The KUBE_TOKEN
    required: true

runs:
  using: composite
  steps:
    - shell: bash
      run: |
        echo "${{ inputs.cert }}" > ca.crt
        kubectl config set-cluster ${{ inputs.cluster }} --certificate-authority=./ca.crt --server=${{ inputs.api }}
        kubectl config set-credentials cd-serviceaccount --token=${{ inputs.token }}
        kubectl config set-context ${{ inputs.cluster }} --cluster=${{ inputs.cluster }} --user=cd-serviceaccount --namespace=${{ inputs.namespace }}
        kubectl config use-context ${{ inputs.cluster }}
        
        eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
        brew install helm
        yq -i '.appVersion = "${{ inputs.version }}"' projects/${{ inputs.project }}/deploy/Chart.yaml
        helm dependency update projects/${{ inputs.project }}/deploy
        helm upgrade ${{ inputs.project }} projects/${{ inputs.project }}/deploy \
          --install \
          --namespace=${{ inputs.namespace }} \
          --values projects/${{ inputs.project }}/deploy/${{ inputs.values-file }} \
          --set generic-service.image.tag=${{ inputs.version }} \
          --wait \
          --timeout 10m \
          --history-max 10 \
          --reset-values