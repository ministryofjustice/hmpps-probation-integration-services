name: Cloud Platform Deploy
description: Deploy to Cloud Platform using Helm

inputs:
  project:
    description: The project to deploy
    required: true
  environment:
    description: The environment name to deploy to (test/preprod/prod)
    required: true
  version:
    description: The version of the service to deploy
    required: true
  api:
    description: The KUBE_ENV_API
    required: true
  cert:
    description: The KUBE_CERT
    required: true
  cluster:
    description: The KUBE_CLUSTER
    required: true
  namespace:
    description: The KUBE_NAMESPACE
    required: true
  token:
    description: The KUBE_TOKEN
    required: true
  github_token:
    description: A GitHub token, to pull the IP allow list groups
    required: true

runs:
  using: composite
  steps:
    - uses: actions/checkout@v4

    - name: Get environment details
      uses: ./.github/actions/get-env-details
      id: env
      with:
        environment: ${{ inputs.environment }}

    - name: Get build info
      uses: ./.github/actions/get-build-info
      with:
        project: ${{ inputs.project }}
        version: ${{ inputs.version }}

    - name: Authenticate
      uses: ./.github/actions/cloud-platform-auth
      with:
        api: ${{ inputs.api }}
        cert: ${{ inputs.cert }}
        cluster: ${{ inputs.cluster }}
        namespace: ${{ inputs.namespace }}
        token: ${{ inputs.token }}

    - name: Deploy
      shell: bash
      run: |
        eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
        brew install helm
        yq -i ".appVersion = \"${{ inputs.version }}\"" "projects/${{ inputs.project }}/deploy/Chart.yaml"
        helm dependency update "projects/${{ inputs.project }}/deploy"
        exec helm upgrade '${{ inputs.project }}' 'projects/${{ inputs.project }}/deploy' \
          --atomic \
          --history-max 10 \
          --force \
          --install \
          --reset-values \
          --set 'version=${{ inputs.version }}' \
          --set 'generic-service.image.tag=${{ inputs.version }}' \
          --set 'generic-service.env.VERSION=${{ inputs.version }}' \
          --set "generic-service.env.BUILD_INFO=$([ -r "$BUILD_INFO" ] && cat "$BUILD_INFO" | base64 -w0 || echo)" \
          --set "generic-service.env.GIT_INFO=$([ -r "$GIT_INFO" ] && cat "$GIT_INFO" | base64 -w0 || echo)" \
          --timeout 10m \
          --values <(curl "$(gh api '/repos/ministryofjustice/hmpps-ip-allowlists/contents/ip-allowlist-groups.yaml' | jq -r '.download_url')") \
          --values templates/helm-defaults.yml \
          --values 'projects/${{ inputs.project }}/deploy/values.yaml' \
          --values 'projects/${{ inputs.project }}/deploy/${{ steps.env.outputs.values-file }}' \
          --wait
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
        BUILD_INFO: projects/${{ inputs.project }}/build-info.properties
        GIT_INFO: projects/${{ inputs.project }}/git.properties