name: Cloud Platform Deploy
description: Deploy to Cloud Platform using Helm

inputs:
  project:
    description: The project to deploy
    required: true
  environment:
    description: The environment to deploy to (dev/preprod/prod)
    required: true
  version:
    description: The version of the service to deploy
    required: true
  api:
    description: The KUBE_ENV_API
    required: true
  cert:
    description: The KUBE_CERT
    required: true
  cluster:
    description: The KUBE_CLUSTER
    required: true
  namespace:
    description: The KUBE_NAMESPACE
    required: true
  token:
    description: The KUBE_TOKEN
    required: true
  json-secrets:
    description: json representation of secrets to add to parameter store
    required: true

runs:
  using: composite
  steps:
    - uses: actions/checkout@v3
    - name: Get environment details
      uses: ./.github/actions/get-env-details
      id: env
      with:
        environment: ${{ inputs.environment }}

    - name: auth k8s
      shell: bash
      run: |
        echo "${{ inputs.cert }}" > ca.crt
        kubectl config set-cluster ${{ inputs.cluster }} --certificate-authority=./ca.crt --server=${{ inputs.api }}
        kubectl config set-credentials cd-serviceaccount --token=${{ inputs.token }}
        kubectl config set-context ${{ inputs.cluster }} --cluster=${{ inputs.cluster }} --user=cd-serviceaccount --namespace=${{ inputs.namespace }}
        kubectl config use-context ${{ inputs.cluster }}

    - name: add secrets to k8s
      shell: bash
      env:
        ALL_SECRETS: ${{ inputs.json-secrets }}
      run: |
        project_name=$(echo 'offender-events-and-delius' | tr '[:lower:]' '[:upper:]' | sed 's/-/_/g')
        secret_command='kubectl -n ${{ inputs.namespace }} create secret generic offender-events-and-delius'
        for key in $(echo "${ALL_SECRETS}" | jq -r ". | keys[] | select(. | startswith(\"${project_name}\"))");
        do
          name="${key##${project_name}_}"
          value=$(echo "${ALL_SECRETS}" | jq -r ".${key}")
          secret_command="${secret_command} --from-literal='$name=$value'"
        done
        kubectl -n ${{ inputs.namespace }} delete secret offender-events-and-delius --ignore-not-found
        eval $secret_command

    - name: deploy to k8s
      shell: bash
      run: |        
        eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
        brew install helm
        yq -i '.appVersion = "${{ inputs.version }}"' projects/offender-events-and-delius/deploy/Chart.yaml
        helm dependency update projects/offender-events-and-delius/deploy
        helm upgrade offender-events-and-delius projects/offender-events-and-delius/deploy \
          --install \
          --namespace=${{ inputs.namespace }} \
          --values templates/helm-defaults.yml \
          --values templates/values.yaml \
          --values projects/offender-events-and-delius/deploy/values-dev.yml \
          --set generic-service.image.tag=${{ inputs.version }} \
          --wait \
          --timeout 10m \
          --history-max 10 \
          --reset-values