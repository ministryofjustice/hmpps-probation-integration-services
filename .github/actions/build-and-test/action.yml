name: Build and test
description: Build projects, run tests and check coverage using Gradle

outputs:
  version:
    description: The image tag used in the build
    value: ${{ steps.version.outputs.version }}
  changed-projects:
    description: A JSON array of projects that changed
    value: ${{ steps.check-changes.outputs.projects }}

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
    - id: check-changes
      uses: ./.github/actions/check-changes
    - uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - uses: gradle/wrapper-validation-action@v1

    - name: Set version
      id: version
      shell: bash
      run: |
        version=$(date '+%Y-%m-%d').${{ github.run_number }}.$(echo ${{ github.sha }} | cut -c1-7)
        echo version=$version
        echo "ORG_GRADLE_PROJECT_version=$version" >> $GITHUB_ENV
        echo "version=$version" >> $GITHUB_OUTPUT

    - name: Set Gradle properties
      shell: bash
      run: echo -e "\norg.gradle.jvmargs=-Xmx1g -XX:MaxMetaspaceSize=512m" >> gradle.properties

    - name: Compile and test
      uses: gradle/gradle-build-action@v2
      with:
        arguments: |
          check 
          -Djava.util.logging.manager=org.jboss.logmanager.LogManager

    - name: Build standalone docker images
      uses: gradle/gradle-build-action@v2
      with:
        arguments: docker

    - name: Sonar analysis
      uses: gradle/gradle-build-action@v2
      if: ${{ github.actor != 'dependabot[bot]' }}
      with:
        arguments: sonar

    - name: Publish test reports
      uses: mikepenz/action-junit-report@v3.3.3
      if: always() && github.actor != 'dependabot[bot]'
      with:
        check_name: |-
          Unit test results
          Integration test results
        report_paths: |-
          **/build/test-results/test/TEST-*.xml
          **/build/test-results/integrationTest/TEST-*.xml
