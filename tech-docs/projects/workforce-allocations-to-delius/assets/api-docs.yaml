openapi: 3.1.0
info:
  title: API Reference
  contact:
    name: Probation Integration Team
    url: https://mojdt.slack.com/archives/C02HQ4M2YQN
    email: probation-integration-team@digital.justice.gov.uk
  license:
    name: MIT
    url: https://github.com/ministryofjustice/hmpps-probation-integration-services/blob/main/LICENSE
  version: "1.0"
servers:
- url: /
security:
- hmpps-auth-token: []
paths:
  /users/limited-access:
    get:
      tags:
      - user-resource
      summary: |-
        Data access restriction information for the combination of the Delius
                    user and the supplied list of CRNs
      description: "Probation case records in Delius may have access restrictions\n\
        \            defined for particular Delius users. This restrictions may be\
        \ in place to stop\n            identified users accessing information on\
        \ specific people or they may restrict\n            access to all users other\
        \ than those named. The restrictions may be in place\n            for a number\
        \ of reasons related to the case supervision and clients should use\n    \
        \        the restriction information to mask data access from any identified\
        \ user that\n            has a restriction in place\n        "
      operationId: limitedAccessCheck
      parameters:
      - name: username
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAccess"
    post:
      tags:
      - user-resource
      summary: |-
        Data access restriction information for the combination of the Delius
                    user and the supplied list of CRNs
      description: "Probation case records in Delius may have access restrictions\n\
        \            defined for particular Delius users. This restrictions may be\
        \ in place to stop\n            identified users accessing information on\
        \ specific people or they may restrict\n            access to all users other\
        \ than those named. The restrictions may be in place\n            for a number\
        \ of reasons related to the case supervision and clients should use\n    \
        \        the restriction information to mask data access from any identified\
        \ user that\n            has a restriction in place\n        "
      operationId: limitedAccessCheck_1
      parameters:
      - name: username
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAccess"
  /staff/{code}/active-cases:
    post:
      tags:
      - staff-resource
      summary: |-
        Personal information along with a list of active
                    cases for the identified probation practitioner
      description: "Summary information on the full case list of\n            of the\
        \ probation practitioner identified in the request.\n            Used to support\
        \ the 'Case Details' capability of the HMPPS\n            Workload service,\
        \ which show details of the current case load\n            of the staff member\
        \ for capacity planning\n            "
      operationId: activeCases
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActiveCasesResponse"
  /person/{crn}/limited-access:
    post:
      tags:
      - user-resource
      summary: "Returns limited access information (restrictions and exclusions) for\
        \ a Delius CRN, given a list of staff codes"
      operationId: allAccessLimitationsForCrnAndUserList
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CaseAccessList"
  /allocation/details:
    post:
      tags:
      - allocation-detail-resource
      summary: Summary information on the person on probation and probation practitioner
      description: "Summary information on the person on probation and probation practitioner\n\
        \            identified by the list of CRNs and staff codes provided in the\
        \ request. Used to support\n            showing the impact of case allocations\
        \ in the HMPPS Workforce service\n        "
      operationId: getDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AllocationDetailRequests"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllocationDetails"
  /allocation-demand:
    post:
      tags:
      - allocation-demand-resource
      summary: List of summary probation case details for cases that require allocation
      description: "Summary information on the probation case list provided in the\
        \ request.\n            Used to support the list of 'Unallocated Community\
        \ Cases' in the HMPPS Workforce\n            service which shows the list\
        \ of cases that require allocation to a probation\n            practitioner\n\
        \        "
      operationId: findUnallocatedForTeam
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AllocationDemandRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllocationDemandResponse"
  /users:
    get:
      tags:
      - user-resource
      summary: Returns all users with the Delius `MAABT001` role
      operationId: allUsers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StreamingResponseBody"
  /users/{username}/teams:
    get:
      tags:
      - user-resource
      summary: "Team, LAU, PDU and Provider hierarchy associated with a staff username"
      description: "A list of teams for a staff username, along with the LAU (Local\
        \ Admin Unit), PDU (Probation Delivery Unit) and Provider for each."
      operationId: userTeams
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StaffTeamsResponse"
  /teams:
    get:
      tags:
      - team-resource
      operationId: activeCases_1
      parameters:
      - name: teamCode
        in: query
        required: false
        schema:
          type: array
          default: []
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamsResponse"
  /staff/{code}/teams:
    get:
      tags:
      - staff-resource
      summary: "Team, LAU, PDU and Provider hierarchy associated with a staff code"
      description: "A list of teams for a staff code, along with the LAU (Local Admin\
        \ Unit), PDU (Probation Delivery Unit) and Provider for each."
      operationId: teams
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StaffTeamsResponse"
  /staff/{code}/officer-view:
    get:
      tags:
      - staff-resource
      summary: |-
        Personal and and summary caseload information for
                    the identified probation officer
      description: "Summary information on the probation caseload\n            for\
        \ the probation officer identified in the request. Used\n            to support\
        \ the 'Officer View' capability of the HMPPS\n            Workload service\
        \ which shows statistics on the staff members\n            caseload\n    \
        \        "
      operationId: officerView
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OfficerView"
  /registrations/{crn}/flags:
    get:
      tags:
      - registration-resource
      operationId: getRiskFlagsByCrn
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RiskSummary"
  /probation-estate:
    get:
      tags:
      - team-resource
      operationId: allTeams
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProbationEstateResponse"
  /person/{value}:
    get:
      tags:
      - person-resource
      summary: Basic information on the person on probation
      description: "Basic information on the person on probation as held in Delius,\n\
        \            identified by either the CRN or NOMS number provided in the request.\
        \ Supports\n            display of the overview person information in the\
        \ HMPPS Workload service\n        "
      operationId: findPerson
      parameters:
      - name: value
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: query
        required: false
        schema:
          type: string
          default: CRN
          enum:
          - CRN
          - NOMS
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"
  /person/{crn}/reallocation-details:
    get:
      tags:
      - person-resource
      summary: Information about the person on probation to allow reallocation
      operationId: findPerson_1
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReallocationDetails"
  /person/{crn}/limited-access/all:
    get:
      tags:
      - user-resource
      summary: Returns all limited access information (restrictions and exclusions)
        for a Delius CRN
      operationId: allAccessLimitationsForCrn
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CaseAccessList"
  /offenders/{crn}/documents:
    get:
      tags:
      - document-resource
      summary: List of documents held in Delius for the probation case
      description: "List of documents available in Delius for the probation\n    \
        \        case identified by the CRN provided in the request. Document list\n\
        \            includes summary information on the type and purpose of document\
        \ held.\n            Used to support the 'Document List' view of the HMPPS\
        \ Workforce service\n            which is used to give detailed information\
        \ on the case when allocating\n            to a probation practitioner\n \
        \       "
      operationId: findDocuments
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PersonDocument"
  /offenders/{crn}/documents/{id}:
    get:
      tags:
      - document-resource
      summary: Fetch a complete document from Delius/Alfresco
      description: "Returns the full document identified by the CRN and\n        \
        \    document id provided in the request. Document is returned in the\n  \
        \          format stored in Alfresco. Used to support downloading documents\n\
        \            from the document list in the HMPPS Workload service\n      \
        \  "
      operationId: getDocument
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StreamingResponseBody"
  /initial-allocations.csv:
    get:
      tags:
      - initial-allocation-resource
      summary: "A report of all allocations created by either the Manage a Workforce\
        \ Allocation tool or Delius, since the start of 2024."
      operationId: getInitialAllocations
      responses:
        "200":
          description: OK
          content:
            text/csv:
              schema:
                $ref: "#/components/schemas/StreamingResponseBody"
  /docs/asyncapi:
    get:
      tags:
      - async-api-controller
      operationId: asyncApi
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /allocation-demand/{crn}/{eventNumber}/probation-record:
    get:
      tags:
      - allocation-demand-resource
      summary: Detailed information on the probation supervision history
      description: "Detailed information on all current and previous cases, offences,\
        \ sentences\n            and management by probation practitioners for the\
        \ person identified by the CRN and event\n            provided in the request.\
        \ Supports the 'Probation Record' screen of case allocation in\n         \
        \   the HMPPS Workforce service which is part of the case allocation workflow\n\
        \        "
      operationId: getProbationRecord
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: eventNumber
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProbationRecord"
  /allocation-demand/{crn}/{eventNumber}/case-view:
    get:
      tags:
      - case-view-resource
      summary: Detailed information on the probation case
      description: "Detailed information on the probation case identified\n      \
        \      by the CRN and event number provided in the request. Returns information\n\
        \            on the person on probation, offences, sentence, requirements\
        \ and case\n            documents held in Delius. Used to support the 'Case\
        \ View' screen of the\n            HMPPS Workforce service which provides\
        \ a detailed overview of the case\n            when allocating to a probation\
        \ practitioner\n        "
      operationId: caseView
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: eventNumber
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CaseView"
  /allocation-demand/{crn}/{eventNumber}/allocation:
    get:
      tags:
      - allocation-demand-resource
      summary: Detailed information on the case allocation
      description: "Detailed information on the probation case, event and probation\
        \ practitioners\n            identified in the request. Used to display a\
        \ summary page after case allocation has been\n            completed in the\
        \ HMPPS Workforce service\n        "
      operationId: getAllocationDemandStaff
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: eventNumber
        in: path
        required: true
        schema:
          type: string
      - name: staff
        in: query
        required: true
        schema:
          type: string
      - name: allocatingStaffUsername
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllocationDemandStaffResponse"
  /allocation-demand/{crn}/unallocated-events:
    get:
      tags:
      - allocation-demand-resource
      summary: |-
        Summary information on all Delius events without a case allocation for a person
                    on probation
      description: "Summary information on the person on probation identified by the\
        \ CRN provided\n            in the request with a list of all active Delius\
        \ events for that person that do not currently\n            have a case allocation.\
        \ Used to support choosing the event to allocate in the case allocation\n\
        \            workflow of the HMPPS Workforce service\n        "
      operationId: getUnallocatedEvents
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnallocatedEventsResponse"
  /allocation-demand/{crn}/risk:
    get:
      tags:
      - allocation-demand-resource
      summary: Detailed information on the risk information held in Delius
      description: "Detailed information on the risk factors held and managed in Delius\
        \ for the\n            person on probation identified by the CRN provided\
        \ in the request. Supports the 'Risk'\n            section of the 'Case View'\
        \ within the HMPPS Workload service which is part of the case\n          \
        \  allocation workflow\n        "
      operationId: getRisk
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RiskRecord"
  /allocation-demand/impact:
    get:
      tags:
      - allocation-demand-resource
      summary: Summary information on the person on probation and probation practitioner
      description: "Summary information on the person on probation and probation practitioner\n\
        \            identified by the CRN and staff code provided in the request.\
        \ Used to support the\n            post-allocation 'Impact' screen of the\
        \ HMPPS Workforce service\n        "
      operationId: getImpact
      parameters:
      - name: crn
        in: query
        required: true
        schema:
          type: string
      - name: staff
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllocationImpact"
  /allocation-demand/choose-practitioner:
    get:
      tags:
      - allocation-demand-resource
      summary: List of summary probation case details with probation practioner details
      description: "Summary information on the probation case provided in the request\
        \ along\n            with a list of probation practitioners associated with\
        \ the teams provided in the\n            request. Used to support the 'Choose\
        \ Practitioner' screen of the HMPPS Workforce\n            service which is\
        \ part of the case allocation workflow\n        "
      operationId: choosePractitioner
      parameters:
      - name: crn
        in: query
        required: true
        schema:
          type: string
      - name: teamCode
        in: query
        required: false
        schema:
          type: array
          default: []
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChoosePractitionerResponse"
  /allocation-completed/order-manager:
    get:
      tags:
      - allocation-completed-resource
      summary: Team allocation code for Persons PO
      operationId: getAllocatedManager
      parameters:
      - name: crn
        in: query
        required: true
        schema:
          type: string
      - name: eventNumber
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Manager"
  /allocation-completed/details:
    get:
      tags:
      - allocation-completed-resource
      summary: Summary case allocation information as currently held in Delius
      description: "Summary case allocation information for the probation case\n \
        \           identified by the CRN and Event Number in the request. Also provided\n\
        \            information on the probation practitioner identified by the staff\
        \ code\n            in the request. Used to support the post-allocation information\
        \ page of\n            the HMPPS Workforce service\n        "
      operationId: details
      parameters:
      - name: crn
        in: query
        required: true
        schema:
          type: string
      - name: eventNumber
        in: query
        required: true
        schema:
          type: string
      - name: staffCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllocationCompletedResponse"
components:
  schemas:
    CaseAccess:
      type: object
      properties:
        crn:
          type: string
        userExcluded:
          type: boolean
        userRestricted:
          type: boolean
        exclusionMessage:
          type: string
        restrictionMessage:
          type: string
      required:
      - crn
      - userExcluded
      - userRestricted
    UserAccess:
      type: object
      properties:
        access:
          type: array
          items:
            $ref: "#/components/schemas/CaseAccess"
      required:
      - access
    ActiveCasesResponse:
      type: object
      properties:
        code:
          type: string
        name:
          $ref: "#/components/schemas/Name"
        grade:
          type: string
        email:
          type: string
        cases:
          type: array
          items:
            $ref: "#/components/schemas/Case"
      required:
      - cases
      - code
      - name
    Case:
      type: object
      properties:
        crn:
          type: string
        name:
          $ref: "#/components/schemas/Name"
        type:
          type: string
      required:
      - crn
      - name
      - type
    Name:
      type: object
      properties:
        forename:
          type: string
        middleName:
          type: string
        surname:
          type: string
      required:
      - forename
      - surname
    CaseAccessList:
      type: object
      properties:
        crn:
          type: string
        excludedFrom:
          type: array
          items:
            $ref: "#/components/schemas/User"
        restrictedTo:
          type: array
          items:
            $ref: "#/components/schemas/User"
        exclusionMessage:
          type: string
        restrictionMessage:
          type: string
      required:
      - crn
      - excludedFrom
      - restrictedTo
    User:
      type: object
      properties:
        username:
          type: string
        staffCode:
          type: string
      required:
      - username
    AllocationDetailRequest:
      type: object
      properties:
        crn:
          type: string
        staffCode:
          type: string
      required:
      - crn
      - staffCode
    AllocationDetailRequests:
      type: object
      properties:
        cases:
          type: array
          items:
            $ref: "#/components/schemas/AllocationDetailRequest"
          minItems: 1
      required:
      - cases
    AllocationDetails:
      type: object
      properties:
        cases:
          type: array
          items:
            $ref: "#/components/schemas/AllocationImpact"
      required:
      - cases
    AllocationImpact:
      type: object
      properties:
        crn:
          type: string
        name:
          $ref: "#/components/schemas/Name"
        staff:
          $ref: "#/components/schemas/StaffMember"
    StaffMember:
      type: object
      properties:
        code:
          type: string
        name:
          $ref: "#/components/schemas/Name"
        email:
          type: string
        grade:
          type: string
      required:
      - code
      - name
    AllocationDemandRequest:
      type: object
      properties:
        cases:
          type: array
          items:
            $ref: "#/components/schemas/AllocationRequest"
          maxItems: 500
          minItems: 0
      required:
      - cases
    AllocationRequest:
      type: object
      properties:
        crn:
          type: string
          pattern: "^[a-zA-Z]\\d{6}$"
        eventNumber:
          type: string
          pattern: "^\\d{1,4}$"
      required:
      - crn
      - eventNumber
    AllocationDemandResponse:
      type: object
      properties:
        cases:
          type: array
          items:
            $ref: "#/components/schemas/AllocationResponse"
      required:
      - cases
    AllocationResponse:
      type: object
      properties:
        crn:
          type: string
        name:
          $ref: "#/components/schemas/Name"
        event:
          $ref: "#/components/schemas/Event"
        mostRecentAllocatedEvent:
          $ref: "#/components/schemas/Event"
        sentence:
          $ref: "#/components/schemas/Sentence"
        initialAppointment:
          $ref: "#/components/schemas/InitialAppointment"
        court:
          $ref: "#/components/schemas/NamedCourt"
        type:
          type: string
          enum:
          - LICENSE
          - CUSTODY
          - COMMUNITY
          - UNKNOWN
        probationStatus:
          $ref: "#/components/schemas/ProbationStatus"
        communityPersonManager:
          $ref: "#/components/schemas/Manager"
        handoverDate:
          type: string
          format: date
      required:
      - court
      - crn
      - event
      - name
      - probationStatus
      - type
    Event:
      type: object
      properties:
        number:
          type: string
        manager:
          $ref: "#/components/schemas/Manager"
      required:
      - number
    InitialAppointment:
      type: object
      properties:
        date:
          type: string
          format: date
        staff:
          $ref: "#/components/schemas/StaffMember"
      required:
      - date
      - staff
    Manager:
      type: object
      properties:
        code:
          type: string
        name:
          $ref: "#/components/schemas/Name"
        teamCode:
          type: string
        grade:
          type: string
        allocated:
          type: boolean
      required:
      - allocated
      - code
      - name
      - teamCode
    NamedCourt:
      type: object
      properties:
        name:
          type: string
      required:
      - name
    ProbationStatus:
      type: object
      properties:
        status:
          type: string
          enum:
          - CURRENTLY_MANAGED
          - PREVIOUSLY_MANAGED
          - NEW_TO_PROBATION
          - UNKNOWN
        description:
          type: string
      required:
      - description
      - status
    Sentence:
      type: object
      properties:
        type:
          type: string
        date:
          type: string
          format: date
        length:
          type: string
      required:
      - date
      - length
      - type
    StreamingResponseBody: {}
    LocalAdminUnit:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        probationDeliveryUnit:
          $ref: "#/components/schemas/ProbationDeliveryUnit"
      required:
      - code
      - description
      - probationDeliveryUnit
    ProbationDeliveryUnit:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        provider:
          $ref: "#/components/schemas/Provider"
      required:
      - code
      - description
      - provider
    Provider:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      required:
      - code
      - description
    StaffTeamsResponse:
      type: object
      properties:
        datasets:
          type: array
          items:
            $ref: "#/components/schemas/Provider"
        teams:
          type: array
          items:
            $ref: "#/components/schemas/TeamWithLocalAdminUnit"
      required:
      - teams
    TeamWithLocalAdminUnit:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        localAdminUnit:
          $ref: "#/components/schemas/LocalAdminUnit"
      required:
      - code
      - description
      - localAdminUnit
    TeamsResponse:
      type: object
      properties:
        teams:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: "#/components/schemas/StaffMember"
      required:
      - teams
    OfficerView:
      type: object
      properties:
        code:
          type: string
        name:
          $ref: "#/components/schemas/Name"
        grade:
          type: string
        email:
          type: string
        casesDueToEndInNext4Weeks:
          type: integer
          format: int64
          description: The number of sentenced events with an end date in the next
            four weeks on cases managed by the officer.
        releasesWithinNext4Weeks:
          type: integer
          format: int64
          description: The number of sentenced custodial events with an "Expected
            Release Date" key date in the next four weeks on cases managed by the
            officer.
        paroleReportsToCompleteInNext4Weeks:
          type: integer
          format: int64
          description: The number of parole reports required in the next four weeks
            on cases managed by the officer.
      required:
      - casesDueToEndInNext4Weeks
      - code
      - name
      - paroleReportsToCompleteInNext4Weeks
      - releasesWithinNext4Weeks
    RiskItem:
      type: object
      properties:
        description:
          type: string
        colour:
          type: string
          enum:
          - RED
          - AMBER
          - GREEN
          - WHITE
      required:
      - colour
      - description
    RiskSummary:
      type: object
      properties:
        selfHarm:
          $ref: "#/components/schemas/RiskItem"
        alerts:
          $ref: "#/components/schemas/RiskItem"
        safeguarding:
          $ref: "#/components/schemas/RiskItem"
        information:
          $ref: "#/components/schemas/RiskItem"
        publicProtection:
          $ref: "#/components/schemas/RiskItem"
    LocalAdminUnitWithTeams:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        teams:
          type: array
          items:
            $ref: "#/components/schemas/Team"
      required:
      - code
      - description
      - teams
    ProbationDeliveryUnitWithLocalAdminUnits:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        localAdminUnits:
          type: array
          items:
            $ref: "#/components/schemas/LocalAdminUnitWithTeams"
      required:
      - code
      - description
      - localAdminUnits
    ProbationEstateResponse:
      type: object
      properties:
        providers:
          type: array
          items:
            $ref: "#/components/schemas/ProviderWithProbationDeliveryUnits"
      required:
      - providers
    ProviderWithProbationDeliveryUnits:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        probationDeliveryUnits:
          type: array
          items:
            $ref: "#/components/schemas/ProbationDeliveryUnitWithLocalAdminUnits"
      required:
      - code
      - description
      - probationDeliveryUnits
    Team:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      required:
      - code
      - description
    Person:
      type: object
      properties:
        crn:
          type: string
        name:
          $ref: "#/components/schemas/Name"
        type:
          type: string
          enum:
          - LICENSE
          - CUSTODY
          - COMMUNITY
          - UNKNOWN
      required:
      - crn
      - name
      - type
    ReallocationDetails:
      type: object
      properties:
        crn:
          type: string
        name:
          $ref: "#/components/schemas/Name"
        dateOfBirth:
          type: string
          format: date
        manager:
          $ref: "#/components/schemas/Manager"
        hasActiveOrder:
          type: boolean
      required:
      - crn
      - dateOfBirth
      - hasActiveOrder
      - manager
      - name
    DocumentEvent:
      type: object
      properties:
        eventType:
          type: string
          enum:
          - CURRENT
          - PREVIOUS
        eventNumber:
          type: string
        mainOffence:
          type: string
      required:
      - eventNumber
      - eventType
      - mainOffence
    PersonDocument:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        relatedTo:
          $ref: "#/components/schemas/RelatedTo"
        dateSaved:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
        sensitive:
          type: boolean
      required:
      - name
      - relatedTo
      - sensitive
    RelatedTo:
      type: object
      properties:
        type:
          type: string
          enum:
          - ADDRESS_ASSESSMENT
          - APPROVED_PREMISES_REFERRAL
          - ASSESSMENT
          - CASE_ALLOCATION
          - CONTACT
          - COURT_REPORT
          - CPSPACK
          - DRUGS_TEST
          - PRECONS
          - EVENT
          - EQUALITY
          - INSTITUTIONAL_REPORT
          - NSI
          - PERSON
          - OFFENDER_ADDRESS
          - PERSONAL_CONTACT
          - PERSONAL_CIRCUMSTANCE
          - REFERRAL
          - REGISTRATION
          - UPW_APPOINTMENT
        name:
          type: string
        event:
          $ref: "#/components/schemas/DocumentEvent"
        description:
          type: string
      required:
      - description
      - name
      - type
    PrEvent:
      type: object
      properties:
        sentence:
          $ref: "#/components/schemas/PrSentence"
        offences:
          type: array
          items:
            $ref: "#/components/schemas/PrOffence"
        manager:
          $ref: "#/components/schemas/StaffMember"
      required:
      - offences
      - sentence
    PrOffence:
      type: object
      properties:
        description:
          type: string
        main:
          type: boolean
      required:
      - description
      - main
    PrSentence:
      type: object
      properties:
        description:
          type: string
        length:
          type: string
        startDate:
          type: string
          format: date
        terminationDate:
          type: string
          format: date
      required:
      - description
      - length
      - startDate
    ProbationRecord:
      type: object
      properties:
        crn:
          type: string
        name:
          $ref: "#/components/schemas/Name"
        event:
          $ref: "#/components/schemas/Event"
        activeEvents:
          type: array
          items:
            $ref: "#/components/schemas/PrEvent"
        inactiveEvents:
          type: array
          items:
            $ref: "#/components/schemas/PrEvent"
      required:
      - activeEvents
      - crn
      - event
      - inactiveEvents
      - name
    CaseView:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
        dateOfBirth:
          type: string
          format: date
        gender:
          type: string
        pncNumber:
          type: string
        mainAddress:
          $ref: "#/components/schemas/CvAddress"
        sentence:
          $ref: "#/components/schemas/CvSentence"
        offences:
          type: array
          items:
            $ref: "#/components/schemas/CvOffence"
        requirements:
          type: array
          items:
            $ref: "#/components/schemas/CvRequirement"
        cpsPack:
          $ref: "#/components/schemas/CvDocument"
        preConvictionDocument:
          $ref: "#/components/schemas/CvDocument"
        courtReport:
          $ref: "#/components/schemas/CvDocument"
        age:
          type: integer
          format: int32
      required:
      - age
      - dateOfBirth
      - name
      - offences
      - requirements
      - sentence
    CvAddress:
      type: object
      properties:
        buildingName:
          type: string
        addressNumber:
          type: string
        streetName:
          type: string
        town:
          type: string
        county:
          type: string
        postcode:
          type: string
        noFixedAbode:
          type: boolean
        typeVerified:
          type: boolean
        typeDescription:
          type: string
        startDate:
          type: string
          format: date
      required:
      - noFixedAbode
      - startDate
      - typeVerified
    CvDocument:
      type: object
      properties:
        documentId:
          type: string
        documentName:
          type: string
        dateCreated:
          type: string
          format: date
        description:
          type: string
      required:
      - dateCreated
      - documentId
      - documentName
    CvOffence:
      type: object
      properties:
        mainCategory:
          type: string
        subCategory:
          type: string
        mainOffence:
          type: boolean
      required:
      - mainCategory
      - mainOffence
      - subCategory
    CvRequirement:
      type: object
      properties:
        mainCategory:
          type: string
        subCategory:
          type: string
        length:
          type: string
      required:
      - length
      - mainCategory
    CvSentence:
      type: object
      properties:
        description:
          type: string
        startDate:
          type: string
          format: date
        length:
          type: string
        endDate:
          type: string
          format: date
      required:
      - description
      - endDate
      - length
      - startDate
    AllocationDemandSentence:
      type: object
      properties:
        description:
          type: string
        code:
          type: string
        date:
          type: string
          format: date-time
        lengthValue:
          type: integer
          format: int64
          writeOnly: true
        lengthDescription:
          type: string
          writeOnly: true
        length:
          type: string
      required:
      - code
      - date
      - description
      - length
    AllocationDemandStaffResponse:
      type: object
      properties:
        crn:
          type: string
        name:
          $ref: "#/components/schemas/Name"
        staff:
          $ref: "#/components/schemas/StaffMember"
        allocatingStaff:
          $ref: "#/components/schemas/StaffMember"
        initialAppointment:
          $ref: "#/components/schemas/InitialAppointment"
        ogrs:
          $ref: "#/components/schemas/RiskOGRS"
        sentence:
          $ref: "#/components/schemas/AllocationDemandSentence"
        court:
          $ref: "#/components/schemas/Court"
        offences:
          type: array
          items:
            $ref: "#/components/schemas/Offence"
        activeRequirements:
          type: array
          items:
            $ref: "#/components/schemas/Requirement"
      required:
      - activeRequirements
      - crn
      - name
      - offences
    Court:
      type: object
      properties:
        name:
          type: string
        appearanceDate:
          type: string
          format: date
      required:
      - appearanceDate
      - name
    Offence:
      type: object
      properties:
        mainCategory:
          type: string
        mainOffence:
          type: boolean
      required:
      - mainCategory
      - mainOffence
    Requirement:
      type: object
      properties:
        mainCategory:
          type: string
        subCategory:
          type: string
        length:
          type: string
        id:
          type: integer
          format: int64
        manager:
          $ref: "#/components/schemas/Manager"
        isUnpaidWork:
          type: boolean
      required:
      - id
      - isUnpaidWork
      - length
      - mainCategory
      - manager
    RiskOGRS:
      type: object
      properties:
        lastUpdatedDate:
          type: string
          format: date
        score:
          type: integer
          format: int64
      required:
      - lastUpdatedDate
      - score
    ActiveEvent:
      type: object
      properties:
        eventNumber:
          type: string
        teamCode:
          type: string
        providerCode:
          type: string
      required:
      - eventNumber
      - providerCode
      - teamCode
    UnallocatedEventsResponse:
      type: object
      properties:
        crn:
          type: string
        name:
          $ref: "#/components/schemas/Name"
        activeEvents:
          type: array
          items:
            $ref: "#/components/schemas/ActiveEvent"
      required:
      - activeEvents
      - crn
      - name
    RegistrationFlag:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    RiskRecord:
      type: object
      properties:
        crn:
          type: string
        name:
          $ref: "#/components/schemas/Name"
        activeRegistrations:
          type: array
          items:
            $ref: "#/components/schemas/RiskRegistration"
        inactiveRegistrations:
          type: array
          items:
            $ref: "#/components/schemas/RiskRegistration"
        ogrs:
          $ref: "#/components/schemas/RiskOGRS"
      required:
      - activeRegistrations
      - crn
      - inactiveRegistrations
      - name
    RiskRegistration:
      type: object
      properties:
        description:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        notes:
          type: string
        flag:
          $ref: "#/components/schemas/RegistrationFlag"
      required:
      - description
      - startDate
    ChoosePractitionerResponse:
      type: object
      properties:
        crn:
          type: string
        name:
          $ref: "#/components/schemas/Name"
        probationStatus:
          $ref: "#/components/schemas/ProbationStatus"
        communityPersonManager:
          $ref: "#/components/schemas/Manager"
        teams:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: "#/components/schemas/StaffMember"
      required:
      - crn
      - name
      - probationStatus
      - teams
    AllocationCompletedResponse:
      type: object
      properties:
        crn:
          type: string
        name:
          $ref: "#/components/schemas/Name"
        event:
          $ref: "#/components/schemas/Event"
        type:
          type: string
          enum:
          - LICENSE
          - CUSTODY
          - COMMUNITY
          - UNKNOWN
        initialAppointment:
          $ref: "#/components/schemas/InitialAppointment"
        staff:
          $ref: "#/components/schemas/StaffMember"
      required:
      - crn
      - event
      - name
      - type
  securitySchemes:
    hmpps-auth-token:
      type: http
      name: Authorization
      in: header
      scheme: bearer
      bearerFormat: JWT
