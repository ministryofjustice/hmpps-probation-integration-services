openapi: 3.1.0
info:
  title: API Reference
  contact:
    name: Probation Integration Team
    url: https://mojdt.slack.com/archives/C02HQ4M2YQN
    email: probation-integration-team@digital.justice.gov.uk
  license:
    name: MIT
    url: https://github.com/ministryofjustice/hmpps-probation-integration-services/blob/main/LICENSE
  version: "1.0"
servers:
- url: /
security:
- hmpps-auth-token: []
paths:
  /nomis-case-note/{crn}:
    post:
      tags:
      - case-note-controller
      operationId: createContact
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateContact"
        required: true
      responses:
        "201":
          description: Created
  /appointments/{crn}:
    get:
      tags:
      - appointment-controller
      operationId: findPerson
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: startDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: endDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultSetAppointment"
    post:
      tags:
      - appointment-controller
      operationId: createAppointment
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAppointment"
        required: true
      responses:
        "201":
          description: Created
  /probation-cases/{nomsId}/crn:
    get:
      tags:
      - case-detail-controller
      operationId: findCrn
      parameters:
      - name: nomsId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CaseIdentifiers"
  /probation-cases/{crn}:
    get:
      tags:
      - case-detail-controller
      operationId: getPersonDetail
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonDetail"
  /probation-cases/{crn}/mappa:
    get:
      tags:
      - case-detail-controller
      operationId: findMappaInfo
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MappaDetail"
  /probation-cases/{crn}/community-manager:
    get:
      tags:
      - case-detail-controller
      operationId: getCommunityManager
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Manager"
  /duty-to-refer-nsi/{value}:
    get:
      tags:
      - duty-to-refer-controller
      operationId: findPerson_1
      parameters:
      - name: value
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: query
        required: false
        schema:
          type: string
          default: CRN
          enum:
          - CRN
          - NOMS
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DutyToReferNSI"
components:
  schemas:
    Author:
      type: object
      properties:
        prisonCode:
          type: string
          minLength: 1
        forename:
          type: string
          minLength: 1
        surname:
          type: string
          minLength: 1
      required:
      - forename
      - prisonCode
      - surname
    CreateContact:
      type: object
      properties:
        type:
          type: string
          description: Nomis contact type. Must either IMMEDIATE_NEEDS_REPORT or PRE_RELEASE_REPORT
          example: IMMEDIATE_NEEDS_REPORT
        description:
          type: string
        dateTime:
          type: string
          format: date-time
        notes:
          type: string
          minLength: 1
        author:
          $ref: "#/components/schemas/Author"
      required:
      - author
      - dateTime
      - notes
      - type
    CreateAppointment:
      type: object
      properties:
        type:
          type: string
          enum:
          - Accommodation
          - ThinkingAndBehaviour
          - FamilyAndCommunity
          - DrugsAndAlcohol
          - SkillsAndWork
          - Finance
          - Health
          - Benefits
        start:
          type: string
          format: date-time
        duration:
          type: string
          format: duration
          description: ISO-8601 representation of the duration
          example: PT30M
        notes:
          type: string
        uuid:
          type: string
          format: uuid
      required:
      - duration
      - start
      - type
      - uuid
    CaseIdentifiers:
      type: object
      properties:
        crn:
          type: string
      required:
      - crn
    ContactDetails:
      type: object
      properties:
        telephone:
          type: string
        mobile:
          type: string
        email:
          type: string
    Name:
      type: object
      properties:
        forename:
          type: string
        surname:
          type: string
      required:
      - forename
      - surname
    PersonDetail:
      type: object
      properties:
        crn:
          type: string
        name:
          $ref: "#/components/schemas/Name"
        dateOfBirth:
          type: string
          format: date
        contactDetails:
          $ref: "#/components/schemas/ContactDetails"
      required:
      - crn
      - dateOfBirth
      - name
    MappaDetail:
      type: object
      properties:
        level:
          type: integer
          format: int32
        levelDescription:
          type: string
        category:
          type: integer
          format: int32
        categoryDescription:
          type: string
        startDate:
          type: string
          format: date
        reviewDate:
          type: string
          format: date
      required:
      - startDate
    Manager:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
        unallocated:
          type: boolean
      required:
      - unallocated
    DutyToReferNSI:
      type: object
      properties:
        nsiSubType:
          type: string
        referralDate:
          type: string
          format: date
        provider:
          type: string
        team:
          type: string
        officer:
          $ref: "#/components/schemas/Officer"
        status:
          type: string
        startDateTime:
          type: string
          format: date-time
        notes:
          type: string
        mainAddress:
          $ref: "#/components/schemas/MainAddress"
      required:
      - nsiSubType
      - referralDate
      - status
    MainAddress:
      type: object
      properties:
        buildingName:
          type: string
        addressNumber:
          type: string
        streetName:
          type: string
        district:
          type: string
        town:
          type: string
        county:
          type: string
        postcode:
          type: string
        noFixedAbode:
          type: boolean
    Officer:
      type: object
      properties:
        forename:
          type: string
        surname:
          type: string
        middleName:
          type: string
      required:
      - forename
      - surname
    Address:
      type: object
      properties:
        buildingName:
          type: string
        buildingNumber:
          type: string
        streetName:
          type: string
        district:
          type: string
        town:
          type: string
        county:
          type: string
        postcode:
          type: string
    Appointment:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/Type"
        dateTime:
          type: string
          format: date-time
        duration:
          type: string
          format: duration
          description: ISO-8601 representation of the duration
          example: PT30M
        staff:
          $ref: "#/components/schemas/Staff"
        location:
          $ref: "#/components/schemas/Location"
        description:
          type: string
        outcome:
          $ref: "#/components/schemas/Outcome"
      required:
      - dateTime
      - description
      - duration
      - staff
      - type
    Location:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        address:
          $ref: "#/components/schemas/Address"
        telephoneNumber:
          type: string
      required:
      - code
      - description
    Outcome:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      required:
      - code
      - description
    ResultSetAppointment:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: "#/components/schemas/Appointment"
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
      required:
      - page
      - results
      - size
      - totalElements
      - totalPages
    Staff:
      type: object
      properties:
        code:
          type: string
        name:
          $ref: "#/components/schemas/Name"
        email:
          type: string
        telephone:
          type: string
      required:
      - code
      - name
    Type:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      required:
      - code
      - description
  securitySchemes:
    hmpps-auth-token:
      type: http
      name: Authorization
      in: header
      scheme: bearer
      bearerFormat: JWT
