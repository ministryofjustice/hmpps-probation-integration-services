openapi: 3.1.0
info:
  title: API Reference
  contact:
    name: Probation Integration Team
    url: https://mojdt.slack.com/archives/C02HQ4M2YQN
    email: probation-integration-team@digital.justice.gov.uk
  license:
    name: MIT
    url: https://github.com/ministryofjustice/hmpps-probation-integration-services/blob/main/LICENSE
  version: "1.0"
servers:
- url: /
security:
- hmpps-auth-token: []
paths:
  /users/{username}/access/{crn}:
    get:
      tags:
      - user-resource
      operationId: userAccessCheck
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      - name: crn
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CaseAccess"
  /docs/asyncapi:
    get:
      tags:
      - async-api-controller
      operationId: asyncApi
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /case-data/{crn}/{eventId}:
    get:
      tags:
      - case-details-controller
      summary: Detailed information on the probation case
      description: "Full details of the probation case for the purposes\n        \
        \    of creating a new unpaid work assessment. The service will return\n \
        \           case information for the CRN and Event Number supplied in the\n\
        \            request. Only active personal contacts and personal circumstances\n\
        \            are included\n        "
      operationId: personDetails
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: eventId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CaseDetails"
  /case-data/{crn}/personal-details:
    get:
      tags:
      - person-controller
      summary: |-
        Details of all active personal contacts and personal
                    circumstances for a person on probation
      description: "Details of all active personal contacts and personal\n       \
        \     circumstances related to the probation case identified by the CRN\n\
        \            provided in the request. The service will return personal contacts\n\
        \            and personal circumstances that are active on the date of the\n\
        \            request. Used to access any additional information held in Delius\n\
        \            when cloning an existing assessment\n        "
      operationId: personDetails_1
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonalDetails"
components:
  schemas:
    CaseAccess:
      type: object
      properties:
        crn:
          type: string
        userExcluded:
          type: boolean
        userRestricted:
          type: boolean
        exclusionMessage:
          type: string
        restrictionMessage:
          type: string
      required:
      - crn
      - userExcluded
      - userRestricted
    Address:
      type: object
      properties:
        buildingName:
          type: string
        addressNumber:
          type: string
        streetName:
          type: string
        district:
          type: string
        town:
          type: string
        county:
          type: string
        postcode:
          type: string
    Alias:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
        dateOfBirth:
          type: string
          format: date
      required:
      - dateOfBirth
      - name
    CaseDetails:
      type: object
      properties:
        crn:
          type: string
        name:
          $ref: "#/components/schemas/Name"
        dateOfBirth:
          type: string
          format: date
        gender:
          type: string
        genderIdentity:
          type: string
        croNumber:
          type: string
        pncNumber:
          type: string
        aliases:
          type: array
          items:
            $ref: "#/components/schemas/Alias"
        emailAddress:
          type: string
        phoneNumbers:
          type: array
          items:
            $ref: "#/components/schemas/PhoneNumber"
        mainAddress:
          $ref: "#/components/schemas/Address"
        ethnicity:
          type: string
        disabilities:
          type: array
          items:
            $ref: "#/components/schemas/Disability"
        provisions:
          type: array
          items:
            $ref: "#/components/schemas/Provision"
        language:
          $ref: "#/components/schemas/Language"
        personalCircumstances:
          type: array
          items:
            $ref: "#/components/schemas/PersonalCircumstance"
        personalContacts:
          type: array
          items:
            $ref: "#/components/schemas/PersonalContact"
        mappaRegistration:
          $ref: "#/components/schemas/MappaRegistration"
        registerFlags:
          type: array
          items:
            $ref: "#/components/schemas/RegisterFlag"
        sentence:
          $ref: "#/components/schemas/Sentence"
      required:
      - crn
      - dateOfBirth
      - name
    Disability:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/Type"
        condition:
          $ref: "#/components/schemas/Type"
        notes:
          type: string
      required:
      - type
    Language:
      type: object
      properties:
        requiresInterpreter:
          type: boolean
        primaryLanguage:
          type: string
      required:
      - primaryLanguage
      - requiresInterpreter
    MainOffence:
      type: object
      properties:
        category:
          $ref: "#/components/schemas/Type"
        subCategory:
          $ref: "#/components/schemas/Type"
      required:
      - category
      - subCategory
    MappaRegistration:
      type: object
      properties:
        startDate:
          type: string
          format: date
        level:
          $ref: "#/components/schemas/Type"
        category:
          $ref: "#/components/schemas/Type"
      required:
      - category
      - level
      - startDate
    Name:
      type: object
      properties:
        forename:
          type: string
        middleName:
          type: string
        surname:
          type: string
      required:
      - forename
      - surname
    PersonalCircumstance:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/Type"
        subType:
          $ref: "#/components/schemas/Type"
        notes:
          type: string
        evidenced:
          type: boolean
      required:
      - evidenced
      - type
    PersonalContact:
      type: object
      properties:
        relationship:
          type: string
        relationshipType:
          $ref: "#/components/schemas/Type"
        name:
          $ref: "#/components/schemas/Name"
        telephoneNumber:
          type: string
        mobileNumber:
          type: string
        address:
          $ref: "#/components/schemas/Address"
      required:
      - name
      - relationship
      - relationshipType
    PhoneNumber:
      type: object
      properties:
        type:
          type: string
        number:
          type: string
      required:
      - number
      - type
    Provision:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/Type"
        category:
          $ref: "#/components/schemas/Type"
        notes:
          type: string
      required:
      - type
    RegisterFlag:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        riskColour:
          type: string
      required:
      - code
      - description
    Sentence:
      type: object
      properties:
        startDate:
          type: string
          format: date
        mainOffence:
          $ref: "#/components/schemas/MainOffence"
      required:
      - mainOffence
      - startDate
    Type:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      required:
      - code
      - description
    PersonalDetails:
      type: object
      properties:
        crn:
          type: string
        personalCircumstances:
          type: array
          items:
            $ref: "#/components/schemas/PersonalCircumstance"
        personalContacts:
          type: array
          items:
            $ref: "#/components/schemas/PersonalContact"
      required:
      - crn
      - personalCircumstances
      - personalContacts
  securitySchemes:
    hmpps-auth-token:
      type: http
      name: Authorization
      in: header
      scheme: bearer
      bearerFormat: JWT
