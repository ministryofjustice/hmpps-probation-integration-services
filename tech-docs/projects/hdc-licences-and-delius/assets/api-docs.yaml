openapi: 3.1.0
info:
  title: API Reference
  contact:
    name: Probation Integration Team
    url: https://mojdt.slack.com/archives/C02HQ4M2YQN
    email: probation-integration-team@digital.justice.gov.uk
  license:
    name: MIT
    url: https://github.com/ministryofjustice/hmpps-probation-integration-services/blob/main/LICENSE
  version: "1.0"
servers:
- url: /
security:
- hmpps-auth-token: []
paths:
  /users/{username}/roles/{role}:
    put:
      tags:
      - user-controller
      operationId: addRole
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      - name: role
        in: path
        required: true
        schema:
          type: string
          enum:
          - LHDCBT002
          - LHDCBT003
      responses:
        "200":
          description: OK
    delete:
      tags:
      - user-controller
      operationId: removeRole
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      - name: role
        in: path
        required: true
        schema:
          type: string
          enum:
          - LHDCBT002
          - LHDCBT003
      responses:
        "200":
          description: OK
  /nomsNumbers:
    post:
      tags:
      - offender-search
      summary: Requires ROLE_PROBATION__SEARCH_PERSON role
      description: Match prisoners by a list of prisoner noms numbers
      operationId: findByNomsNumbers
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OffenderDetail"
        "401":
          description: "Unauthorised, requires a valid Oauth2 token"
        "403":
          description: "Forbidden, requires an authorisation with role PROBATION_API__HDC__CASE_DETAIL"
  /users/{username}/details:
    get:
      tags:
      - user-controller
      operationId: getUserDetails
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDetails"
  /staff:
    get:
      tags:
      - staff-controller
      operationId: getStaffByUsername
      parameters:
      - name: username
        in: query
        required: true
        schema:
          type: string
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Staff"
  /staff/{code}:
    get:
      tags:
      - staff-controller
      operationId: getStaffByCode
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Staff"
  /staff/{code}/managedPrisonerIds:
    get:
      tags:
      - staff-controller
      operationId: getManagedPrisonersByStaffCode
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /providers:
    get:
      tags:
      - provider-controller
      operationId: getProviders
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Provider"
  /providers/{providerCode}/localAdminUnits/{lauCode}:
    get:
      tags:
      - provider-controller
      operationId: getLocalAdminUnit
      parameters:
      - name: providerCode
        in: path
        required: true
        schema:
          type: string
      - name: lauCode
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocalAdminUnitWithTeams"
  /providers/{code}:
    get:
      tags:
      - provider-controller
      operationId: getProvider
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProviderWithLaus"
  /managedPrisonerIds:
    get:
      tags:
      - staff-controller
      operationId: getManagedPrisonersByStaffId
      parameters:
      - name: staffId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /case/{nomsNumber}/communityManager:
    get:
      tags:
      - staff-controller
      operationId: getCommunityManager
      parameters:
      - name: nomsNumber
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommunityManager"
components:
  schemas:
    IDs:
      type: object
      properties:
        crn:
          type: string
          description: Probation Case Reference Number
          example: A123456
        nomsNumber:
          type: string
          description: Prison Offender Number
          example: G5555TT
      required:
      - crn
      - nomsNumber
    OffenderDetail:
      type: object
      properties:
        otherIds:
          $ref: "#/components/schemas/IDs"
        offenderManagers:
          type: array
          items:
            $ref: "#/components/schemas/OffenderManager"
      required:
      - otherIds
    OffenderManager:
      type: object
      properties:
        staff:
          $ref: "#/components/schemas/StaffHuman"
        probationArea:
          $ref: "#/components/schemas/ProbationArea"
        active:
          type: boolean
      required:
      - active
      - probationArea
    ProbationArea:
      type: object
      properties:
        description:
          type: string
    StaffHuman:
      type: object
      properties:
        code:
          type: string
          description: Staff code
          example: AN001A
        forenames:
          type: string
          description: Given names
          example: Sheila Linda
        surname:
          type: string
          description: Family name
          example: Hancock
        unallocated:
          type: boolean
          description: When true the not allocated
          example: false
      required:
      - code
      - forenames
      - surname
      - unallocated
    UserDetails:
      type: object
      properties:
        username:
          type: string
        enabled:
          type: boolean
        roles:
          type: array
          items:
            type: string
      required:
      - enabled
      - roles
      - username
    LocalAdminUnit:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      required:
      - code
      - description
    Name:
      type: object
      properties:
        forenames:
          type: string
        surname:
          type: string
      required:
      - forenames
      - surname
    ProbationDeliveryUnit:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      required:
      - code
      - description
    Staff:
      type: object
      properties:
        code:
          type: string
        staffId:
          type: integer
          format: int64
        name:
          $ref: "#/components/schemas/Name"
        teams:
          type: array
          items:
            $ref: "#/components/schemas/TeamDetails"
        username:
          type: string
        email:
          type: string
      required:
      - code
      - name
      - staffId
      - teams
    TeamDetails:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        telephone:
          type: string
        emailAddress:
          type: string
        probationDeliveryUnit:
          $ref: "#/components/schemas/ProbationDeliveryUnit"
        localAdminUnit:
          $ref: "#/components/schemas/LocalAdminUnit"
      required:
      - code
      - description
      - localAdminUnit
      - probationDeliveryUnit
    Provider:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      required:
      - code
      - description
    LocalAdminUnitWithTeams:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        teams:
          type: array
          items:
            $ref: "#/components/schemas/Team"
      required:
      - code
      - description
      - teams
    Team:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      required:
      - code
      - description
    ProviderWithLaus:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        localAdminUnits:
          type: array
          items:
            $ref: "#/components/schemas/LocalAdminUnit"
      required:
      - code
      - description
      - localAdminUnits
    CommunityManager:
      type: object
      properties:
        code:
          type: string
        staffId:
          type: integer
          format: int64
        name:
          $ref: "#/components/schemas/Name"
        team:
          $ref: "#/components/schemas/Team"
        localAdminUnit:
          $ref: "#/components/schemas/LocalAdminUnit"
        provider:
          $ref: "#/components/schemas/Provider"
        isUnallocated:
          type: boolean
      required:
      - code
      - isUnallocated
      - localAdminUnit
      - name
      - provider
      - staffId
      - team
  securitySchemes:
    hmpps-auth-token:
      type: http
      name: Authorization
      in: header
      scheme: bearer
      bearerFormat: JWT
