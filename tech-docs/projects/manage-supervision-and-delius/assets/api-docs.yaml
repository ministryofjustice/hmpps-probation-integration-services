openapi: 3.1.0
info:
  title: API Reference
  contact:
    name: Probation Integration Team
    url: https://mojdt.slack.com/archives/C02HQ4M2YQN
    email: probation-integration-team@digital.justice.gov.uk
  license:
    name: MIT
    url: https://github.com/ministryofjustice/hmpps-probation-integration-services/blob/main/LICENSE
  version: "1.0"
servers:
- url: /
security:
- hmpps-auth-token: []
paths:
  /appointments/{id}/reschedule:
    put:
      tags:
      - Appointments
      operationId: rescheduleAppointment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RescheduleAppointmentRequest"
        required: true
      responses:
        "200":
          description: OK
  /appointments/{id}/recreate:
    put:
      tags:
      - Appointments
      operationId: recreateAppointment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecreateAppointmentRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecreatedAppointment"
  /alerts:
    get:
      tags:
      - Activity
      summary: Get all alerts for the current user
      operationId: getUserAlerts
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAlerts"
    put:
      tags:
      - Activity
      summary: Allows a user to clear alerts
      operationId: clearUserAlerts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClearAlerts"
        required: true
      responses:
        "200":
          description: OK
  /user/{username}/access:
    post:
      tags:
      - User access
      operationId: checkUserAccess
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAccess"
  /personal-details/{crn}/contact:
    post:
      tags:
      - Personal Details
      summary: Update personal details
      operationId: updatePersonalContactDetails
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PersonContactEditRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonalDetails"
  /personal-details/{crn}/address:
    post:
      tags:
      - Personal Details
      summary: Update personal details
      operationId: updatePersonalAddressDetails
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PersonAddressEditRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonalDetails"
  /documents/{crn}/search:
    post:
      tags:
      - Documents
      summary: Search for documents for a person by file name and created date
      operationId: searchPersonDocuments
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      - name: sortBy
        in: query
        required: false
        schema:
          type: string
          default: createdAt.desc
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DocumentSearch"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonDocuments"
  /documents/{crn}/search/text:
    post:
      tags:
      - Documents
      summary: Search within documents for a person for a search query and created
        date
      operationId: searchTextPersonDocuments
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      - name: useDBFilenameSearch
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: sortBy
        in: query
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DocumentTextSearch"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonDocuments"
  /caseload/user/{username}/search:
    post:
      tags:
      - Caseload Info
      summary: Gets caseloads for the user based on search filter
      operationId: searchUserCaseload
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 100
      - name: sortBy
        in: query
        required: false
        schema:
          type: string
          default: nextContact.asc
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserSearchFilter"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StaffCaseload"
  /appointment/{crn}:
    post:
      tags:
      - Sentence
      operationId: createAppointment
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAppointment"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppointmentDetail"
  /appointment/{crn}/check:
    post:
      tags:
      - Sentence
      operationId: checkAppointment
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckAppointment"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppointmentChecks"
  /activity/{crn}:
    get:
      tags:
      - Activity
      summary: Gets all activity for a person
      operationId: getPersonActivity
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonActivity"
    post:
      tags:
      - Activity
      summary: Activity log search for a person
      operationId: activitySearch
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PersonActivitySearchRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonActivitySearchResponse"
  /documents/{crn}/update/contact/{id}:
    patch:
      tags:
      - Documents
      summary: add document to an existing contact
      operationId: addDocumentToContact
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
              - file
      responses:
        "200":
          description: OK
  /appointment:
    patch:
      tags:
      - Sentence
      operationId: recordOutcome
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Outcome"
        required: true
      responses:
        "200":
          description: OK
  /user/{username}:
    get:
      tags:
      - User access
      operationId: getUserRoles
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDetails"
  /user/{username}/schedule/upcoming:
    get:
      tags:
      - User
      summary: Gets upcoming appointments for a user
      operationId: getUserUpcomingAppointments
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      - name: sortBy
        in: query
        required: false
        schema:
          type: string
          default: default
      - name: ascending
        in: query
        required: false
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDiary"
  /user/{username}/schedule/no-outcome:
    get:
      tags:
      - User
      summary: Gets passed appointments without an outcome for a user
      operationId: getUserAppointmentsWithoutOutcomes
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      - name: sortBy
        in: query
        required: false
        schema:
          type: string
          default: date
      - name: ascending
        in: query
        required: false
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDiary"
  /user/{username}/providers:
    get:
      tags:
      - User
      operationId: getUserProviders
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      - name: region
        in: query
        required: false
        schema:
          type: string
      - name: team
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProviderResponse"
  /user/{username}/locations:
    get:
      tags:
      - User
      summary: Display user locations
      operationId: getUserOfficeLocations
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserOfficeLocation"
  /user/{username}/appointments:
    get:
      tags:
      - User
      summary: Gets passed appointments without an outcome for a user
      operationId: getUserAppointments
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAppointments"
  /user/{username}/access/{crn}:
    get:
      tags:
      - User access
      operationId: checkAccess
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      - name: crn
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CaseAccess"
  /sentences/{crn}:
    get:
      tags:
      - Sentences
      summary: Display active events
      operationId: getOverview
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: number
        in: query
        required: false
        schema:
          type: string
      - name: includeRarRequirements
        in: query
        required: false
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MinimalSentenceOverview"
  /sentence/{crn}:
    get:
      tags:
      - Sentence
      summary: Display active events
      operationId: getOverview_1
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: number
        in: query
        required: false
        schema:
          type: string
      - name: includeRarRequirements
        in: query
        required: false
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SentenceOverview"
  /sentence/{crn}/requirement/{requirementId}/note/{noteId}:
    get:
      tags:
      - Sentence
      summary: Get licence condition note
      operationId: getRequirementNote
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: requirementId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: noteId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequirementNoteDetail"
  /sentence/{crn}/probation-history:
    get:
      tags:
      - Sentence
      summary: Display probation history
      operationId: getProbationHistory
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/History"
  /sentence/{crn}/previous-orders:
    get:
      tags:
      - Sentence
      summary: Display inactive events
      operationId: getPreviousEvents
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreviousOrderHistory"
  /sentence/{crn}/previous-orders/{eventNumber}:
    get:
      tags:
      - Sentence
      summary: Display inactive events
      operationId: getPreviousEvent
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: eventNumber
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreviousOrderInformation"
  /sentence/{crn}/offences/{eventNumber}:
    get:
      tags:
      - Sentence
      summary: Display additional offence details
      operationId: getAdditionalOffenceDetails
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: eventNumber
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Offences"
  /sentence/{crn}/licence-condition/{licenceConditionId}/note/{noteId}:
    get:
      tags:
      - Sentence
      summary: Get licence condition note
      operationId: getLicenceConditionNote
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: licenceConditionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: noteId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LicenceConditionNoteDetail"
  /sentence/{crn}/contacts:
    get:
      tags:
      - Sentence
      summary: Display contacts
      operationId: getContacts
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfessionalContact"
  /schedule/{crn}/upcoming:
    get:
      tags:
      - Schedule
      summary: 'Gets upcoming schedule information’ '
      operationId: getUpcomingSchedule
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      - name: sortBy
        in: query
        required: false
        schema:
          type: string
          default: date
      - name: ascending
        in: query
        required: false
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Schedule"
  /schedule/{crn}/previous:
    get:
      tags:
      - Schedule
      summary: 'Gets previous schedule information’ '
      operationId: getPreviousSchedule
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      - name: sortBy
        in: query
        required: false
        schema:
          type: string
          default: date
      - name: ascending
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Schedule"
  /schedule/{crn}/next-appointment:
    get:
      tags:
      - Schedule
      summary: Gets the next appointment in the future and after the date of the passed
        in contact
      operationId: getContactNote
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: contactId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: username
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NextAppointment"
  /schedule/{crn}/appointment/{contactId}:
    get:
      tags:
      - Schedule
      summary: 'Gets individual appointment information’ '
      operationId: getContact
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: contactId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonAppointment"
  /schedule/{crn}/appointment/{contactId}/note/{noteId}:
    get:
      tags:
      - Schedule
      summary: 'Gets individual appointment information’ '
      operationId: getContactNote_1
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: contactId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: noteId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonAppointment"
  /risk-flags/{crn}:
    get:
      tags:
      - Risk Flags
      summary: 'Gets all risk flags for an offender’ '
      operationId: getPersonRiskFlags
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonRiskFlags"
  /risk-flags/{crn}/{riskFlagId}:
    get:
      tags:
      - Risk Flags
      summary: 'Gets an individual risk flag for an offender’ '
      operationId: getPersonRiskFlag
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: riskFlagId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonRiskFlag"
  /risk-flags/{crn}/{riskFlagId}/risk-removal-note/{riskRemovalNoteId}:
    get:
      tags:
      - Risk Flags
      summary: 'Gets an individual risk flag for an offender’ '
      operationId: getPersonRiskFlagRemovalHistorySingleNote
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: riskFlagId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: riskRemovalNoteId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonRiskFlag"
  /risk-flags/{crn}/{riskFlagId}/note/{noteId}:
    get:
      tags:
      - Risk Flags
      summary: 'Gets an individual risk flag for an offender’ '
      operationId: getPersonRiskFlagSingleNote
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: riskFlagId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: noteId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonRiskFlag"
  /personal-details/{crn}:
    get:
      tags:
      - Personal Details
      summary: "Personal Details containing address, personal contacts and documents "
      operationId: getPersonalDetails
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonalDetails"
  /personal-details/{crn}/summary:
    get:
      tags:
      - Personal Details
      summary: Person Summary
      operationId: getPersonSummary
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonSummary"
  /personal-details/{crn}/provisions:
    get:
      tags:
      - Personal Details
      summary: Person Provisions
      operationId: getPersonProvisions
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProvisionOverview"
  /personal-details/{crn}/provisions/{provisionId}/note/{noteId}:
    get:
      tags:
      - Personal Details
      summary: Person Provisions
      operationId: getPersonProvisionsSingleNote
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: provisionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: noteId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProvisionOverviewSummary"
  /personal-details/{crn}/personal-contact/{id}:
    get:
      tags:
      - Personal Details
      summary: Person Contact
      operationId: getPersonContact
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonalContact"
  /personal-details/{crn}/personal-contact/{id}/note/{noteId}:
    get:
      tags:
      - Personal Details
      summary: Person Contact
      operationId: getPersonContactSingleNote
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: noteId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonalContact"
  /personal-details/{crn}/main-address/note/{noteId}:
    get:
      tags:
      - Personal Details
      summary: Person Contact
      operationId: getMainAddressSingleNote
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: noteId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonalDetailsSummary"
  /personal-details/{crn}/document/{documentId}:
    get:
      tags:
      - Personal Details
      summary: Download document
      operationId: downloadDocument
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StreamingResponseBody"
  /personal-details/{crn}/disability/{disabilityId}/note/{noteId}:
    get:
      tags:
      - Personal Details
      summary: Person Disabilities
      operationId: getPersonDisabilitiesSingleNote
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: disabilityId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: noteId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisabilityOverview"
  /personal-details/{crn}/disabilities:
    get:
      tags:
      - Personal Details
      summary: Person Disabilities
      operationId: getPersonDisabilities
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisabilityOverview"
  /personal-details/{crn}/circumstances:
    get:
      tags:
      - Personal Details
      summary: Person Circumstances
      operationId: getPersonCircumstances
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CircumstanceOverview"
  /personal-details/{crn}/circumstances/{circumstanceId}/note/{noteId}:
    get:
      tags:
      - Personal Details
      summary: Person Circumstances
      operationId: getPersonCircumstancesSingleNote
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: circumstanceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: noteId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CircumstanceOverviewSummary"
  /personal-details/{crn}/addresses:
    get:
      tags:
      - Personal Details
      summary: Person Addresses
      operationId: getPersonAddresses
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddressOverview"
  /personal-details/{crn}/addresses/{id}/note/{noteId}:
    get:
      tags:
      - Personal Details
      summary: Person Addresses
      operationId: getPersonAddressesSingleNote
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: noteId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddressOverviewSummary"
  /overview/{crn}:
    get:
      tags:
      - Overview
      summary: "MAS Overview containing Personal Details, Activity, Compliance, Schedule,\
        \ Orders and Sentences "
      operationId: getOverview_2
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Overview"
  /documents/{crn}:
    get:
      tags:
      - Documents
      summary: Gets all documents for a person
      operationId: getPersonDocuments
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      - name: sortBy
        in: query
        required: false
        schema:
          type: string
          default: createdAt.desc
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonDocuments"
  /compliance/{crn}:
    get:
      tags:
      - Compliance
      summary: Gets all compliance info for a person
      operationId: getPersonCompliance
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonCompliance"
  /caseload/user/{username}:
    get:
      tags:
      - Caseload Info
      summary: Gets caseloads for the user
      operationId: getUserCaseload
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 100
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StaffCaseload"
  /caseload/user/{username}/teams:
    get:
      tags:
      - Caseload Info
      summary: Gets the users teams
      operationId: getUserTeams
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserTeam"
  /caseload/team/{teamCode}:
    get:
      tags:
      - Caseload Info
      summary: Gets the caseload for the team
      operationId: getTeamCaseload
      parameters:
      - name: teamCode
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamCaseload"
  /caseload/team/{teamCode}/staff:
    get:
      tags:
      - Caseload Info
      summary: Gets the staff within the team
      operationId: getTeamStaff
      parameters:
      - name: teamCode
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamStaff"
  /appointment/{crn}/contact-type/{code}:
    get:
      tags:
      - Sentence
      operationId: getProbationRecordsByContactType
      parameters:
      - name: crn
        in: path
        required: true
        schema:
          type: string
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactTypeAssociation"
  /appointment/types:
    get:
      tags:
      - Sentence
      operationId: getAppointmentTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppointmentTypeResponse"
  /appointment/teams/provider/{code}:
    get:
      tags:
      - Sentence
      operationId: getTeamsByProvider
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamResponse"
  /appointment/staff/team/{code}:
    get:
      tags:
      - Sentence
      operationId: getStaffByTeam
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StaffTeam"
  /appointment/location/provider/{provideCode}/team/{teamCode}:
    get:
      tags:
      - Sentence
      operationId: getOfficeLocationByTeamAndProvider
      parameters:
      - name: provideCode
        in: path
        required: true
        schema:
          type: string
      - name: teamCode
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProviderOfficeLocation"
components:
  schemas:
    RescheduleAppointmentRequest:
      type: object
      properties:
        date:
          type: string
          format: date
        startTime:
          type: string
        endTime:
          type: string
        staffCode:
          type: string
        teamCode:
          type: string
        locationCode:
          type: string
        notes:
          type: string
        sensitive:
          type: boolean
      required:
      - date
      - endTime
      - startTime
    RecreateAppointmentRequest:
      type: object
      properties:
        date:
          type: string
          format: date
        startTime:
          type: string
        endTime:
          type: string
        staffCode:
          type: string
        teamCode:
          type: string
        locationCode:
          type: string
        notes:
          type: string
        sensitive:
          type: boolean
        requestedBy:
          type: string
          enum:
          - POP
          - SERVICE
        uuid:
          type: string
          format: uuid
      required:
      - date
      - endTime
      - requestedBy
      - startTime
    RecreatedAppointment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        externalReference:
          type: string
      required:
      - externalReference
      - id
    ClearAlerts:
      type: object
      properties:
        alertIds:
          type: array
          items:
            type: integer
            format: int64
          maxItems: 100
          minItems: 1
      required:
      - alertIds
    CaseAccess:
      type: object
      properties:
        crn:
          type: string
        userExcluded:
          type: boolean
        userRestricted:
          type: boolean
        exclusionMessage:
          type: string
        restrictionMessage:
          type: string
      required:
      - crn
      - userExcluded
      - userRestricted
    UserAccess:
      type: object
      properties:
        access:
          type: array
          items:
            $ref: "#/components/schemas/CaseAccess"
      required:
      - access
    PersonContactEditRequest:
      type: object
      properties:
        phoneNumber:
          type: string
          maxLength: 35
          minLength: 0
        mobileNumber:
          type: string
          maxLength: 35
          minLength: 0
        emailAddress:
          type: string
          maxLength: 255
          minLength: 0
    Address:
      type: object
      properties:
        id:
          type: integer
          format: int64
        buildingName:
          type: string
        buildingNumber:
          type: string
        streetName:
          type: string
        district:
          type: string
        town:
          type: string
        county:
          type: string
        postcode:
          type: string
        telephoneNumber:
          type: string
        from:
          type: string
          format: date
        to:
          type: string
          format: date
        verified:
          type: boolean
        lastUpdated:
          type: string
          format: date
        lastUpdatedBy:
          $ref: "#/components/schemas/Name"
        type:
          type: string
        typeCode:
          type: string
        status:
          type: string
        addressNotes:
          type: array
          items:
            $ref: "#/components/schemas/NoteDetail"
        addressNote:
          $ref: "#/components/schemas/NoteDetail"
        noFixedAddress:
          type: boolean
      required:
      - from
    AddressType:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      required:
      - code
      - description
    Circumstances:
      type: object
      properties:
        circumstances:
          type: array
          items:
            $ref: "#/components/schemas/PersonalCircumstance"
        lastUpdated:
          type: string
          format: date
      required:
      - circumstances
    Contact:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        telephoneNumber:
          type: string
        provider:
          type: string
        probationDeliveryUnit:
          type: string
        team:
          type: string
        allocationDate:
          type: string
          format: date
        allocatedUntil:
          type: string
          format: date
        lastUpdated:
          type: string
          format: date
        responsibleOfficer:
          type: boolean
        prisonOffenderManager:
          type: boolean
      required:
      - allocationDate
      - name
      - prisonOffenderManager
      - probationDeliveryUnit
      - provider
      - responsibleOfficer
    ContactAddress:
      type: object
      properties:
        buildingName:
          type: string
        buildingNumber:
          type: string
        streetName:
          type: string
        district:
          type: string
        town:
          type: string
        county:
          type: string
        postcode:
          type: string
        lastUpdated:
          type: string
          format: date
        lastUpdatedBy:
          $ref: "#/components/schemas/Name"
      required:
      - lastUpdated
      - lastUpdatedBy
    Disabilities:
      type: object
      properties:
        disabilities:
          type: array
          items:
            type: string
        lastUpdated:
          type: string
          format: date
      required:
      - disabilities
    Document:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
      required:
      - id
      - name
    Name:
      type: object
      properties:
        forename:
          type: string
        middleName:
          type: string
        surname:
          type: string
      required:
      - forename
      - surname
    NoteDetail:
      type: object
      properties:
        id:
          type: integer
          format: int32
        createdBy:
          type: string
        createdByDate:
          type: string
          format: date
        note:
          type: string
        hasNoteBeenTruncated:
          type: boolean
      required:
      - id
      - note
    PersonSummary:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
        crn:
          type: string
        offenderId:
          type: integer
          format: int64
        pnc:
          type: string
        noms:
          type: string
        dateOfBirth:
          type: string
          format: date
      required:
      - crn
      - dateOfBirth
      - name
      - offenderId
    PersonalCircumstance:
      type: object
      properties:
        subType:
          type: string
        type:
          type: string
      required:
      - subType
      - type
    PersonalContact:
      type: object
      properties:
        personSummary:
          $ref: "#/components/schemas/PersonSummary"
        contactId:
          type: integer
          format: int64
        name:
          $ref: "#/components/schemas/Name"
        relationship:
          type: string
        relationshipType:
          type: string
        address:
          $ref: "#/components/schemas/ContactAddress"
        contactNotes:
          type: array
          items:
            $ref: "#/components/schemas/NoteDetail"
        contactNote:
          $ref: "#/components/schemas/NoteDetail"
        phone:
          type: string
        email:
          type: string
        startDate:
          type: string
          format: date
        lastUpdated:
          type: string
          format: date
        lastUpdatedBy:
          $ref: "#/components/schemas/Name"
      required:
      - contactId
      - lastUpdated
      - lastUpdatedBy
      - name
      - personSummary
      - relationshipType
    PersonalDetails:
      type: object
      properties:
        crn:
          type: string
        name:
          $ref: "#/components/schemas/Name"
        contacts:
          type: array
          items:
            $ref: "#/components/schemas/PersonalContact"
        mainAddress:
          $ref: "#/components/schemas/Address"
        otherAddressCount:
          type: integer
          format: int32
        previousAddressCount:
          type: integer
          format: int32
        preferredGender:
          type: string
        dateOfBirth:
          type: string
          format: date
        preferredName:
          type: string
        previousSurname:
          type: string
        preferredLanguage:
          type: string
        genderIdentity:
          type: string
        selfDescribedGender:
          type: string
        aliases:
          type: array
          items:
            $ref: "#/components/schemas/Name"
        telephoneNumber:
          type: string
        mobileNumber:
          type: string
        email:
          type: string
        circumstances:
          $ref: "#/components/schemas/Circumstances"
        disabilities:
          $ref: "#/components/schemas/Disabilities"
        provisions:
          $ref: "#/components/schemas/Provisions"
        pnc:
          type: string
        noms:
          type: string
        sex:
          type: string
        religionOrBelief:
          type: string
        sexualOrientation:
          type: string
        requiresInterpreter:
          type: boolean
        documents:
          type: array
          items:
            $ref: "#/components/schemas/Document"
        lastUpdated:
          type: string
          format: date
        lastUpdatedBy:
          $ref: "#/components/schemas/Name"
        addressTypes:
          type: array
          items:
            $ref: "#/components/schemas/AddressType"
        staffContacts:
          type: array
          items:
            $ref: "#/components/schemas/Contact"
      required:
      - addressTypes
      - aliases
      - circumstances
      - contacts
      - crn
      - dateOfBirth
      - disabilities
      - documents
      - name
      - otherAddressCount
      - preferredGender
      - previousAddressCount
      - provisions
      - sex
      - staffContacts
    Provisions:
      type: object
      properties:
        provisions:
          type: array
          items:
            type: string
        lastUpdated:
          type: string
          format: date
      required:
      - provisions
    PersonAddressEditRequest:
      type: object
      properties:
        buildingName:
          type: string
          maxLength: 35
          minLength: 0
        buildingNumber:
          type: string
          maxLength: 35
          minLength: 0
        streetName:
          type: string
          maxLength: 35
          minLength: 0
        district:
          type: string
          maxLength: 35
          minLength: 0
        town:
          type: string
          maxLength: 35
          minLength: 0
        county:
          type: string
          maxLength: 35
          minLength: 0
        postcode:
          type: string
          maxLength: 35
          minLength: 0
        addressTypeCode:
          type: string
        verified:
          type: boolean
        noFixedAddress:
          type: boolean
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        notes:
          type: string
    DocumentSearch:
      type: object
      properties:
        name:
          type: string
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
    DocumentDetails:
      type: object
      properties:
        alfrescoId:
          type: string
        offenderId:
          type: integer
          format: int64
        name:
          type: string
        level:
          type: string
        type:
          type: string
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        author:
          type: string
        status:
          type: string
        workInProgress:
          type: boolean
      required:
      - alfrescoId
      - level
      - name
      - offenderId
      - type
    DocumentLevel:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      required:
      - code
      - description
    DocumentMetadata:
      type: object
      properties:
        documentLevels:
          type: array
          items:
            $ref: "#/components/schemas/DocumentLevel"
      required:
      - documentLevels
    PersonDocuments:
      type: object
      properties:
        personSummary:
          $ref: "#/components/schemas/PersonSummary"
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int32
        sortedBy:
          type: string
        documents:
          type: array
          items:
            $ref: "#/components/schemas/DocumentDetails"
        metadata:
          $ref: "#/components/schemas/DocumentMetadata"
      required:
      - documents
      - personSummary
      - totalElements
      - totalPages
    DocumentTextSearch:
      type: object
      properties:
        query:
          type: string
        levelCode:
          type: string
          enum:
          - ALL
          - PERSON
          - PRE_CONS
          - ADDRESS_ASSESSMENT
          - PERSONAL_CONTACT
          - PERSONAL_CIRCUMSTANCE
          - EVENT
          - CPS
          - COURT_REPORT
          - INSTITUTIONAL_REPORT
          - AP_REFERRAL
          - ASSESSMENT
          - CASE_ALLOCATION
          - REFERRAL
          - UPW
          - CONTACT
          - NSI
          - ADDRESS
          - REGISTER
        dateFrom:
          type: string
          format: date-time
        dateTo:
          type: string
          format: date-time
      required:
      - levelCode
    UserSearchFilter:
      type: object
      properties:
        nameOrCrn:
          type: string
        sentenceCode:
          type: string
        nextContactCode:
          type: string
    Appointment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        date:
          type: string
          format: date-time
        description:
          type: string
      required:
      - date
      - description
      - id
    KeyPair:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      required:
      - code
      - description
    MetaData:
      type: object
      properties:
        sentenceTypes:
          type: array
          items:
            $ref: "#/components/schemas/KeyPair"
        contactTypes:
          type: array
          items:
            $ref: "#/components/schemas/KeyPair"
      required:
      - contactTypes
      - sentenceTypes
    StaffCase:
      type: object
      properties:
        caseName:
          $ref: "#/components/schemas/Name"
        crn:
          type: string
        dob:
          type: string
          format: date
        nextAppointment:
          $ref: "#/components/schemas/Appointment"
        previousAppointment:
          $ref: "#/components/schemas/Appointment"
        latestSentence:
          type: string
        numberOfAdditionalSentences:
          type: integer
          format: int64
        limitedAccess:
          type: boolean
      required:
      - crn
    StaffCaseload:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int32
        sortedBy:
          type: string
        provider:
          type: string
        staff:
          $ref: "#/components/schemas/Name"
        caseload:
          type: array
          items:
            $ref: "#/components/schemas/StaffCase"
        metaData:
          $ref: "#/components/schemas/MetaData"
      required:
      - caseload
      - staff
      - totalElements
      - totalPages
    CreateAppointment:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/User"
        type:
          type: string
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        interval:
          type: string
          enum:
          - DAY
          - WEEK
          - FORTNIGHT
          - FOUR_WEEKS
        numberOfAppointments:
          type: integer
          format: int32
        eventId:
          type: integer
          format: int64
        uuid:
          type: string
          format: uuid
        requirementId:
          type: integer
          format: int64
        licenceConditionId:
          type: integer
          format: int64
        nsiId:
          type: integer
          format: int64
        until:
          type: string
          format: date-time
        notes:
          type: string
        sensitive:
          type: boolean
        visorReport:
          type: boolean
      required:
      - end
      - interval
      - numberOfAppointments
      - start
      - type
      - user
      - uuid
    User:
      type: object
      properties:
        username:
          type: string
        teamCode:
          type: string
        locationCode:
          type: string
      required:
      - teamCode
      - username
    AppointmentDetail:
      type: object
      properties:
        appointments:
          type: array
          items:
            $ref: "#/components/schemas/CreatedAppointment"
      required:
      - appointments
    CreatedAppointment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        externalReference:
          type: string
      required:
      - id
    CheckAppointment:
      type: object
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
      required:
      - end
      - start
    AppointmentCheck:
      type: object
      properties:
        isCurrentUser:
          type: boolean
        appointmentIsWith:
          $ref: "#/components/schemas/Name"
        startAndEnd:
          type: string
      required:
      - appointmentIsWith
      - isCurrentUser
      - startAndEnd
    AppointmentChecks:
      type: object
      properties:
        nonWorkingDayName:
          type: string
        isWithinOneHourOfMeetingWith:
          $ref: "#/components/schemas/AppointmentCheck"
        overlapsWithMeetingWith:
          $ref: "#/components/schemas/AppointmentCheck"
    PersonActivitySearchRequest:
      type: object
      properties:
        keywords:
          type: string
        dateFrom:
          type: string
          format: date
        dateTo:
          type: string
          format: date
        filters:
          type: array
          items:
            type: string
      required:
      - filters
    Activity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        eventNumber:
          type: string
        type:
          type: string
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        rarToolKit:
          type: string
        appointmentNotes:
          type: array
          items:
            $ref: "#/components/schemas/NoteDetail"
        appointmentNote:
          $ref: "#/components/schemas/NoteDetail"
        isSensitive:
          type: boolean
        hasOutcome:
          type: boolean
        wasAbsent:
          type: boolean
        officer:
          $ref: "#/components/schemas/Manager"
        isInitial:
          type: boolean
        isNationalStandard:
          type: boolean
        location:
          $ref: "#/components/schemas/OfficeAddress"
        rescheduled:
          type: boolean
        rescheduledStaff:
          type: boolean
        rescheduledPop:
          type: boolean
        didTheyComply:
          type: boolean
        absentWaitingEvidence:
          type: boolean
        rearrangeOrCancelReason:
          type: string
        rescheduledBy:
          $ref: "#/components/schemas/Name"
        repeating:
          type: boolean
        nonComplianceReason:
          type: string
        documents:
          type: array
          items:
            $ref: "#/components/schemas/Document"
        isRarRelated:
          type: boolean
        rarCategory:
          type: string
        acceptableAbsence:
          type: boolean
        acceptableAbsenceReason:
          type: string
        isAppointment:
          type: boolean
        isCommunication:
          type: boolean
        action:
          type: string
        isSystemContact:
          type: boolean
        isEmailOrTextFromPop:
          type: boolean
        isPhoneCallFromPop:
          type: boolean
        isEmailOrTextToPop:
          type: boolean
        isPhoneCallToPop:
          type: boolean
        isInPast:
          type: boolean
        isPastAppointment:
          type: boolean
        countsTowardsRAR:
          type: boolean
        lastUpdated:
          type: string
          format: date-time
        lastUpdatedBy:
          $ref: "#/components/schemas/Name"
        description:
          type: string
        outcome:
          type: string
        deliusManaged:
          type: boolean
        isVisor:
          type: boolean
        eventId:
          type: integer
          format: int64
        component:
          $ref: "#/components/schemas/Component"
        nsiId:
          type: integer
          format: int64
      required:
      - deliusManaged
      - documents
      - id
      - isAppointment
      - isCommunication
      - isInPast
      - isInitial
      - isNationalStandard
      - isPastAppointment
      - lastUpdated
      - lastUpdatedBy
      - rescheduled
      - rescheduledPop
      - rescheduledStaff
      - startDateTime
      - type
    Component:
      type: object
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
        type:
          type: string
          enum:
          - LICENCE_CONDITION
          - REQUIREMENT
      required:
      - description
      - id
      - type
    Manager:
      type: object
      properties:
        code:
          type: string
        name:
          $ref: "#/components/schemas/Name"
        teamCode:
          type: string
        providerCode:
          type: string
        username:
          type: string
      required:
      - code
      - name
      - providerCode
      - teamCode
    OfficeAddress:
      type: object
      properties:
        code:
          type: string
        officeName:
          type: string
        buildingName:
          type: string
        buildingNumber:
          type: string
        streetName:
          type: string
        district:
          type: string
        town:
          type: string
        county:
          type: string
        postcode:
          type: string
        ldu:
          type: string
        telephoneNumber:
          type: string
      required:
      - code
      - ldu
    PersonActivitySearchResponse:
      type: object
      properties:
        size:
          type: integer
          format: int32
        page:
          type: integer
          format: int32
        totalResults:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        personSummary:
          $ref: "#/components/schemas/PersonSummary"
        activities:
          type: array
          items:
            $ref: "#/components/schemas/Activity"
      required:
      - activities
      - page
      - personSummary
      - size
      - totalPages
      - totalResults
    Outcome:
      type: object
      properties:
        id:
          type: integer
          format: int64
        outcomeRecorded:
          type: boolean
        notes:
          type: string
        sensitive:
          type: boolean
      required:
      - id
      - outcomeRecorded
      - sensitive
    UserDetails:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        surname:
          type: string
        email:
          type: string
        enabled:
          type: boolean
        roles:
          type: array
          items:
            type: string
      required:
      - enabled
      - firstName
      - roles
      - surname
      - userId
      - username
    UserAppointment:
      type: object
      properties:
        caseName:
          $ref: "#/components/schemas/Name"
        id:
          type: integer
          format: int64
        crn:
          type: string
        dob:
          type: string
          format: date
        latestSentence:
          type: string
        numberOfAdditionalSentences:
          type: integer
          format: int32
        type:
          type: string
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        location:
          type: string
        deliusManaged:
          type: boolean
      required:
      - caseName
      - crn
      - deliusManaged
      - dob
      - id
      - startDateTime
      - type
    UserDiary:
      type: object
      properties:
        size:
          type: integer
          format: int32
        page:
          type: integer
          format: int32
        totalResults:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        appointments:
          type: array
          items:
            $ref: "#/components/schemas/UserAppointment"
      required:
      - appointments
      - page
      - size
      - totalPages
      - totalResults
    DefaultUserDetails:
      type: object
      properties:
        username:
          type: string
        staffCode:
          type: string
        homeArea:
          type: string
        team:
          type: string
      required:
      - homeArea
      - staffCode
      - username
    Provider:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
      required:
      - code
      - name
    Team:
      type: object
      properties:
        description:
          type: string
        code:
          type: string
      required:
      - code
      - description
    UserProviderResponse:
      type: object
      properties:
        defaultUserDetails:
          $ref: "#/components/schemas/DefaultUserDetails"
        providers:
          type: array
          items:
            $ref: "#/components/schemas/Provider"
        teams:
          type: array
          items:
            $ref: "#/components/schemas/Team"
        users:
          type: array
          items:
            $ref: "#/components/schemas/User"
      required:
      - defaultUserDetails
      - providers
      - teams
      - users
    LocationDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        code:
          type: string
        description:
          type: string
        address:
          $ref: "#/components/schemas/Address"
      required:
      - address
      - code
      - description
      - id
    UserOfficeLocation:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
        locations:
          type: array
          items:
            $ref: "#/components/schemas/LocationDetails"
        location:
          $ref: "#/components/schemas/LocationDetails"
      required:
      - name
    UserAppointments:
      type: object
      properties:
        staff:
          $ref: "#/components/schemas/Name"
        totalAppointments:
          type: integer
          format: int32
        appointments:
          type: array
          items:
            $ref: "#/components/schemas/UserAppointment"
        totalOutcomes:
          type: integer
          format: int32
        outcomes:
          type: array
          items:
            $ref: "#/components/schemas/UserAppointment"
      required:
      - appointments
      - outcomes
      - staff
      - totalAppointments
      - totalOutcomes
    MinimalLicenceCondition:
      type: object
      properties:
        id:
          type: integer
          format: int64
        mainDescription:
          type: string
        active:
          type: boolean
      required:
      - active
      - id
      - mainDescription
    MinimalNsi:
      type: object
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
      required:
      - description
      - id
    MinimalOrder:
      type: object
      properties:
        description:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
      required:
      - description
    MinimalRequirement:
      type: object
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
        active:
          type: boolean
      required:
      - active
      - description
      - id
    MinimalSentence:
      type: object
      properties:
        id:
          type: integer
          format: int64
        eventNumber:
          type: string
        order:
          $ref: "#/components/schemas/MinimalOrder"
        nsis:
          type: array
          items:
            $ref: "#/components/schemas/MinimalNsi"
        licenceConditions:
          type: array
          items:
            $ref: "#/components/schemas/MinimalLicenceCondition"
        requirements:
          type: array
          items:
            $ref: "#/components/schemas/MinimalRequirement"
      required:
      - eventNumber
      - id
      - licenceConditions
      - nsis
      - requirements
    MinimalSentenceOverview:
      type: object
      properties:
        personSummary:
          $ref: "#/components/schemas/PersonSummary"
        sentences:
          type: array
          items:
            $ref: "#/components/schemas/MinimalSentence"
      required:
      - personSummary
      - sentences
    AdditionalSentence:
      type: object
      properties:
        length:
          type: integer
          format: int64
        amount:
          type: integer
          format: int64
        notes:
          type: string
        description:
          type: string
        sentenceNotes:
          type: array
          items:
            $ref: "#/components/schemas/NoteDetail"
        sentenceNote:
          $ref: "#/components/schemas/NoteDetail"
      required:
      - description
    Conviction:
      type: object
      properties:
        sentencingCourt:
          type: string
        responsibleCourt:
          type: string
        convictionDate:
          type: string
          format: date
        additionalSentences:
          type: array
          items:
            $ref: "#/components/schemas/AdditionalSentence"
      required:
      - additionalSentences
    CourtDocument:
      type: object
      properties:
        id:
          type: string
        lastSaved:
          type: string
          format: date
        documentName:
          type: string
      required:
      - id
    LicenceCondition:
      type: object
      properties:
        id:
          type: integer
          format: int64
        mainDescription:
          type: string
        subTypeDescription:
          type: string
        imposedReleasedDate:
          type: string
          format: date
        actualStartDate:
          type: string
          format: date
        licenceConditionNotes:
          type: array
          items:
            $ref: "#/components/schemas/NoteDetail"
        licenceConditionNote:
          $ref: "#/components/schemas/NoteDetail"
        active:
          type: boolean
      required:
      - active
      - id
      - imposedReleasedDate
      - mainDescription
    Offence:
      type: object
      properties:
        description:
          type: string
        count:
          type: integer
          format: int64
      required:
      - count
      - description
    OffenceDetails:
      type: object
      properties:
        eventNumber:
          type: string
        offence:
          $ref: "#/components/schemas/Offence"
        dateOfOffence:
          type: string
          format: date
        notes:
          type: string
        additionalOffences:
          type: array
          items:
            $ref: "#/components/schemas/Offence"
      required:
      - additionalOffences
      - eventNumber
    Order:
      type: object
      properties:
        eventNumber:
          type: string
        description:
          type: string
        length:
          type: integer
          format: int64
        endDate:
          type: string
          format: date
        releaseDate:
          type: string
          format: date
        startDate:
          type: string
          format: date
        status:
          type: string
        mainOffence:
          type: string
        breaches:
          type: integer
          format: int32
      required:
      - description
      - startDate
    Rar:
      type: object
      properties:
        completed:
          type: integer
          format: int32
        nsiCompleted:
          type: integer
          format: int32
        scheduled:
          type: integer
          format: int32
        totalDays:
          type: integer
          format: int32
      required:
      - completed
      - nsiCompleted
      - scheduled
      - totalDays
    Requirement:
      type: object
      properties:
        id:
          type: integer
          format: int64
        code:
          type: string
        expectedStartDate:
          type: string
          format: date
        actualStartDate:
          type: string
          format: date
        expectedEndDate:
          type: string
          format: date
        actualEndDate:
          type: string
          format: date
        terminationReason:
          type: string
        description:
          type: string
        length:
          type: integer
          format: int64
        lengthUnitValue:
          type: string
        requirementNotes:
          type: array
          items:
            $ref: "#/components/schemas/NoteDetail"
        requirementNote:
          $ref: "#/components/schemas/NoteDetail"
        rar:
          $ref: "#/components/schemas/Rar"
        active:
          type: boolean
      required:
      - active
      - actualStartDate
      - code
      - description
      - id
    Sentence:
      type: object
      properties:
        offenceDetails:
          $ref: "#/components/schemas/OffenceDetails"
        conviction:
          $ref: "#/components/schemas/Conviction"
        order:
          $ref: "#/components/schemas/Order"
        requirements:
          type: array
          items:
            $ref: "#/components/schemas/Requirement"
        courtDocuments:
          type: array
          items:
            $ref: "#/components/schemas/CourtDocument"
        unpaidWorkProgress:
          type: string
        licenceConditions:
          type: array
          items:
            $ref: "#/components/schemas/LicenceCondition"
      required:
      - courtDocuments
      - offenceDetails
    SentenceOverview:
      type: object
      properties:
        personSummary:
          $ref: "#/components/schemas/PersonSummary"
        sentenceSummaryList:
          type: array
          items:
            $ref: "#/components/schemas/SentenceSummary"
        sentence:
          $ref: "#/components/schemas/Sentence"
      required:
      - personSummary
      - sentenceSummaryList
    SentenceSummary:
      type: object
      properties:
        eventNumber:
          type: string
        description:
          type: string
      required:
      - description
      - eventNumber
    RequirementNoteDetail:
      type: object
      properties:
        personSummary:
          $ref: "#/components/schemas/PersonSummary"
        requirement:
          $ref: "#/components/schemas/Requirement"
      required:
      - personSummary
    History:
      type: object
      properties:
        personSummary:
          $ref: "#/components/schemas/PersonSummary"
        sentenceSummaryList:
          type: array
          items:
            $ref: "#/components/schemas/SentenceSummary"
        probationHistory:
          $ref: "#/components/schemas/ProbationHistory"
      required:
      - personSummary
      - probationHistory
      - sentenceSummaryList
    ProbationHistory:
      type: object
      properties:
        numberOfTerminatedEvents:
          type: integer
          format: int32
        dateOfMostRecentTerminatedEvent:
          type: string
          format: date
        numberOfTerminatedEventBreaches:
          type: integer
          format: int32
        numberOfProfessionalContacts:
          type: integer
          format: int64
      required:
      - numberOfProfessionalContacts
      - numberOfTerminatedEventBreaches
      - numberOfTerminatedEvents
    PreviousOrder:
      type: object
      properties:
        eventNumber:
          type: string
        title:
          type: string
        description:
          type: string
        terminationDate:
          type: string
          format: date
      required:
      - eventNumber
    PreviousOrderHistory:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
        previousOrders:
          type: array
          items:
            $ref: "#/components/schemas/PreviousOrder"
      required:
      - name
      - previousOrders
    PreviousOrderInformation:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
        title:
          type: string
        sentence:
          $ref: "#/components/schemas/Sentence"
      required:
      - name
    Offences:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
        mainOffence:
          $ref: "#/components/schemas/Offence"
        additionalOffences:
          type: array
          items:
            $ref: "#/components/schemas/Offence"
      required:
      - name
    LicenceConditionNoteDetail:
      type: object
      properties:
        personSummary:
          $ref: "#/components/schemas/PersonSummary"
        licenceCondition:
          $ref: "#/components/schemas/LicenceCondition"
      required:
      - personSummary
    ProfessionalContact:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
        currentContacts:
          type: array
          items:
            $ref: "#/components/schemas/Contact"
        previousContacts:
          type: array
          items:
            $ref: "#/components/schemas/Contact"
      required:
      - currentContacts
      - name
      - previousContacts
    PersonSchedule:
      type: object
      properties:
        size:
          type: integer
          format: int32
        page:
          type: integer
          format: int32
        totalResults:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        appointments:
          type: array
          items:
            $ref: "#/components/schemas/Activity"
      required:
      - appointments
      - page
      - size
      - totalPages
      - totalResults
    Schedule:
      type: object
      properties:
        personSummary:
          $ref: "#/components/schemas/PersonSummary"
        personSchedule:
          $ref: "#/components/schemas/PersonSchedule"
      required:
      - personSchedule
      - personSummary
    NextAppointment:
      type: object
      properties:
        appointment:
          $ref: "#/components/schemas/Activity"
        personManager:
          $ref: "#/components/schemas/PersonManager"
        usernameIsCom:
          type: boolean
      required:
      - personManager
      - usernameIsCom
    PersonManager:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
      required:
      - name
    PersonAppointment:
      type: object
      properties:
        personSummary:
          $ref: "#/components/schemas/PersonSummary"
        appointment:
          $ref: "#/components/schemas/Activity"
      required:
      - appointment
      - personSummary
    MappaDetail:
      type: object
      properties:
        level:
          type: integer
          format: int32
        levelDescription:
          type: string
        category:
          type: integer
          format: int32
        categoryDescription:
          type: string
        startDate:
          type: string
          format: date
        reviewDate:
          type: string
          format: date
        lastUpdated:
          type: string
          format: date
      required:
      - lastUpdated
      - startDate
    Opd:
      type: object
      properties:
        eligible:
          type: boolean
        date:
          type: string
          format: date-time
      required:
      - date
      - eligible
    PersonRiskFlags:
      type: object
      properties:
        personSummary:
          $ref: "#/components/schemas/PersonSummary"
        opd:
          $ref: "#/components/schemas/Opd"
        mappa:
          $ref: "#/components/schemas/MappaDetail"
        riskFlags:
          type: array
          items:
            $ref: "#/components/schemas/RiskFlag"
        removedRiskFlags:
          type: array
          items:
            $ref: "#/components/schemas/RiskFlag"
      required:
      - personSummary
      - removedRiskFlags
      - riskFlags
    RiskFlag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
        level:
          type: string
          enum:
          - HIGH
          - MEDIUM
          - LOW
          - INFORMATION_ONLY
        levelCode:
          type: string
        levelDescription:
          type: string
        riskNotes:
          type: array
          items:
            $ref: "#/components/schemas/NoteDetail"
        riskNote:
          $ref: "#/components/schemas/NoteDetail"
        nextReviewDate:
          type: string
          format: date
        mostRecentReviewDate:
          type: string
          format: date
        createdDate:
          type: string
          format: date
        createdBy:
          $ref: "#/components/schemas/Name"
        removed:
          type: boolean
        removalHistory:
          type: array
          items:
            $ref: "#/components/schemas/RiskFlagRemoval"
      required:
      - createdBy
      - createdDate
      - description
      - id
      - removalHistory
      - removed
    RiskFlagRemoval:
      type: object
      properties:
        riskRemovalNotes:
          type: array
          items:
            $ref: "#/components/schemas/NoteDetail"
        riskRemovalNote:
          $ref: "#/components/schemas/NoteDetail"
        removalDate:
          type: string
          format: date
        removedBy:
          $ref: "#/components/schemas/Name"
      required:
      - removalDate
      - removedBy
    PersonRiskFlag:
      type: object
      properties:
        personSummary:
          $ref: "#/components/schemas/PersonSummary"
        riskFlag:
          $ref: "#/components/schemas/RiskFlag"
      required:
      - personSummary
      - riskFlag
    Provision:
      type: object
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
        provisionNotes:
          type: array
          items:
            $ref: "#/components/schemas/NoteDetail"
        provisionNote:
          $ref: "#/components/schemas/NoteDetail"
        startDate:
          type: string
          format: date
        lastUpdated:
          type: string
          format: date
        lastUpdatedBy:
          $ref: "#/components/schemas/Name"
      required:
      - description
      - id
      - lastUpdated
      - lastUpdatedBy
      - startDate
    ProvisionOverview:
      type: object
      properties:
        personSummary:
          $ref: "#/components/schemas/PersonSummary"
        provisions:
          type: array
          items:
            $ref: "#/components/schemas/Provision"
      required:
      - personSummary
      - provisions
    ProvisionOverviewSummary:
      type: object
      properties:
        personSummary:
          $ref: "#/components/schemas/PersonSummary"
        provision:
          $ref: "#/components/schemas/Provision"
      required:
      - personSummary
    PersonalDetailsSummary:
      type: object
      properties:
        crn:
          type: string
        name:
          $ref: "#/components/schemas/Name"
        contacts:
          type: array
          items:
            $ref: "#/components/schemas/PersonalContact"
        mainAddress:
          $ref: "#/components/schemas/Address"
        otherAddressCount:
          type: integer
          format: int32
        previousAddressCount:
          type: integer
          format: int32
        telephoneNumber:
          type: string
        mobileNumber:
          type: string
        email:
          type: string
      required:
      - contacts
      - crn
      - name
      - otherAddressCount
      - previousAddressCount
    StreamingResponseBody: {}
    Disability:
      type: object
      properties:
        disabilityId:
          type: integer
          format: int32
        description:
          type: string
        disabilityNotes:
          type: array
          items:
            $ref: "#/components/schemas/NoteDetail"
        disabilityNote:
          $ref: "#/components/schemas/NoteDetail"
        startDate:
          type: string
          format: date
        lastUpdated:
          type: string
          format: date
        lastUpdatedBy:
          $ref: "#/components/schemas/Name"
      required:
      - description
      - disabilityId
      - lastUpdated
      - lastUpdatedBy
      - startDate
    DisabilityOverview:
      type: object
      properties:
        personSummary:
          $ref: "#/components/schemas/PersonSummary"
        disabilities:
          type: array
          items:
            $ref: "#/components/schemas/Disability"
        disability:
          $ref: "#/components/schemas/Disability"
      required:
      - personSummary
    Circumstance:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
        subType:
          type: string
        circumstanceNotes:
          type: array
          items:
            $ref: "#/components/schemas/NoteDetail"
        circumstanceNote:
          $ref: "#/components/schemas/NoteDetail"
        verified:
          type: boolean
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        lastUpdated:
          type: string
          format: date
        lastUpdatedBy:
          $ref: "#/components/schemas/Name"
      required:
      - id
      - lastUpdated
      - lastUpdatedBy
      - startDate
      - subType
      - type
    CircumstanceOverview:
      type: object
      properties:
        personSummary:
          $ref: "#/components/schemas/PersonSummary"
        circumstances:
          type: array
          items:
            $ref: "#/components/schemas/Circumstance"
        previousCircumstances:
          type: array
          items:
            $ref: "#/components/schemas/Circumstance"
      required:
      - circumstances
      - personSummary
      - previousCircumstances
    CircumstanceOverviewSummary:
      type: object
      properties:
        personSummary:
          $ref: "#/components/schemas/PersonSummary"
        circumstance:
          $ref: "#/components/schemas/Circumstance"
      required:
      - personSummary
    AddressOverview:
      type: object
      properties:
        personSummary:
          $ref: "#/components/schemas/PersonSummary"
        mainAddress:
          $ref: "#/components/schemas/Address"
        otherAddresses:
          type: array
          items:
            $ref: "#/components/schemas/Address"
        previousAddresses:
          type: array
          items:
            $ref: "#/components/schemas/Address"
      required:
      - otherAddresses
      - personSummary
      - previousAddresses
    AddressOverviewSummary:
      type: object
      properties:
        personSummary:
          $ref: "#/components/schemas/PersonSummary"
        address:
          $ref: "#/components/schemas/Address"
      required:
      - personSummary
    ActivityCount:
      type: object
      properties:
        acceptableAbsenceCount:
          type: integer
          format: int32
        unacceptableAbsenceCount:
          type: integer
          format: int32
        attendedButDidNotComplyCount:
          type: integer
          format: int32
        outcomeNotRecordedCount:
          type: integer
          format: int32
        waitingForEvidenceCount:
          type: integer
          format: int32
        rescheduledCount:
          type: integer
          format: int32
        absentCount:
          type: integer
          format: int32
        rescheduledByStaffCount:
          type: integer
          format: int32
        rescheduledByPersonOnProbationCount:
          type: integer
          format: int32
        lettersCount:
          type: integer
          format: int32
        nationalStandardAppointmentsCount:
          type: integer
          format: int32
        compliedAppointmentsCount:
          type: integer
          format: int32
      required:
      - absentCount
      - acceptableAbsenceCount
      - attendedButDidNotComplyCount
      - compliedAppointmentsCount
      - lettersCount
      - nationalStandardAppointmentsCount
      - outcomeNotRecordedCount
      - rescheduledByPersonOnProbationCount
      - rescheduledByStaffCount
      - rescheduledCount
      - unacceptableAbsenceCount
      - waitingForEvidenceCount
    Compliance:
      type: object
      properties:
        currentBreaches:
          type: integer
          format: int32
        breachStarted:
          type: boolean
        breachesOnCurrentOrderCount:
          type: integer
          format: int32
        priorBreachesOnCurrentOrderCount:
          type: integer
          format: int32
        failureToComplyCount:
          type: integer
          format: int32
      required:
      - breachStarted
      - breachesOnCurrentOrderCount
      - currentBreaches
      - failureToComplyCount
      - priorBreachesOnCurrentOrderCount
    Overview:
      type: object
      properties:
        appointmentsWithoutOutcome:
          type: integer
          format: int32
        absencesWithoutEvidence:
          type: integer
          format: int32
        activity:
          $ref: "#/components/schemas/ActivityCount"
        compliance:
          $ref: "#/components/schemas/Compliance"
        personalDetails:
          $ref: "#/components/schemas/PersonalDetails"
        previousOrders:
          $ref: "#/components/schemas/PreviousOrders"
        schedule:
          $ref: "#/components/schemas/Schedule"
        sentences:
          type: array
          items:
            $ref: "#/components/schemas/Sentence"
        registrations:
          type: array
          items:
            type: string
        mappa:
          $ref: "#/components/schemas/MappaDetail"
      required:
      - absencesWithoutEvidence
      - appointmentsWithoutOutcome
      - personalDetails
      - previousOrders
      - registrations
      - schedule
      - sentences
    PreviousOrders:
      type: object
      properties:
        breaches:
          type: integer
          format: int32
        count:
          type: integer
          format: int32
        lastEndedDate:
          type: string
          format: date
        orders:
          type: array
          items:
            $ref: "#/components/schemas/Order"
      required:
      - breaches
      - count
      - orders
    Breach:
      type: object
      properties:
        startDate:
          type: string
          format: date
        status:
          type: string
    PersonCompliance:
      type: object
      properties:
        personSummary:
          $ref: "#/components/schemas/PersonSummary"
        currentSentences:
          type: array
          items:
            $ref: "#/components/schemas/SentenceCompliance"
        previousOrders:
          $ref: "#/components/schemas/PreviousOrders"
      required:
      - currentSentences
      - personSummary
      - previousOrders
    SentenceCompliance:
      type: object
      properties:
        eventNumber:
          type: string
        mainOffence:
          $ref: "#/components/schemas/Offence"
        order:
          $ref: "#/components/schemas/Order"
        activeBreach:
          $ref: "#/components/schemas/Breach"
        rarDescription:
          type: string
        rarCategory:
          type: string
        compliance:
          $ref: "#/components/schemas/Compliance"
        activity:
          $ref: "#/components/schemas/ActivityCount"
      required:
      - activity
      - compliance
      - eventNumber
      - mainOffence
    UserTeam:
      type: object
      properties:
        provider:
          type: string
        teams:
          type: array
          items:
            $ref: "#/components/schemas/Team"
      required:
      - teams
    Staff:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/Name"
        code:
          type: string
      required:
      - code
      - name
    TeamCase:
      type: object
      properties:
        staff:
          $ref: "#/components/schemas/Staff"
        caseName:
          $ref: "#/components/schemas/Name"
        crn:
          type: string
      required:
      - caseName
      - crn
      - staff
    TeamCaseload:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int32
        provider:
          type: string
        team:
          $ref: "#/components/schemas/Team"
        caseload:
          type: array
          items:
            $ref: "#/components/schemas/TeamCase"
      required:
      - caseload
      - team
      - totalElements
      - totalPages
    TeamStaff:
      type: object
      properties:
        provider:
          type: string
        staff:
          type: array
          items:
            $ref: "#/components/schemas/Staff"
      required:
      - staff
    ContactTypeAssociation:
      type: object
      properties:
        personSummary:
          $ref: "#/components/schemas/PersonSummary"
        contactTypeCode:
          type: string
        associatedWithPerson:
          type: boolean
        personNsis:
          type: array
          items:
            $ref: "#/components/schemas/MinimalNsi"
        sentences:
          type: array
          items:
            $ref: "#/components/schemas/MinimalSentence"
      required:
      - associatedWithPerson
      - contactTypeCode
      - personNsis
      - personSummary
      - sentences
    AppointmentType:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        isPersonLevelContact:
          type: boolean
        isLocationRequired:
          type: boolean
      required:
      - code
      - description
      - isLocationRequired
      - isPersonLevelContact
    AppointmentTypeResponse:
      type: object
      properties:
        appointmentTypes:
          type: array
          items:
            $ref: "#/components/schemas/AppointmentType"
      required:
      - appointmentTypes
    TeamResponse:
      type: object
      properties:
        teams:
          type: array
          items:
            $ref: "#/components/schemas/Team"
      required:
      - teams
    StaffTeam:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: "#/components/schemas/User"
      required:
      - users
    ProviderOfficeLocation:
      type: object
      properties:
        locations:
          type: array
          items:
            $ref: "#/components/schemas/LocationDetails"
      required:
      - locations
    UserAlert:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          $ref: "#/components/schemas/UserAlertType"
        crn:
          type: string
        date:
          type: string
          format: date
        description:
          type: string
        notes:
          type: string
        officer:
          $ref: "#/components/schemas/Staff"
      required:
      - crn
      - date
      - id
      - officer
      - type
    UserAlertType:
      type: object
      properties:
        description:
          type: string
        editable:
          type: boolean
      required:
      - description
      - editable
    UserAlerts:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/UserAlert"
        totalResults:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
      required:
      - content
      - page
      - size
      - totalPages
      - totalResults
    PersonActivity:
      type: object
      properties:
        personSummary:
          $ref: "#/components/schemas/PersonSummary"
        activities:
          type: array
          items:
            $ref: "#/components/schemas/Activity"
      required:
      - activities
      - personSummary
  securitySchemes:
    hmpps-auth-token:
      type: http
      name: Authorization
      in: header
      scheme: bearer
      bearerFormat: JWT
